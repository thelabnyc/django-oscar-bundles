{"version":3,"sources":["webpack://django-oscar-bundles/webpack/runtime/chunk loaded","webpack://django-oscar-bundles/./src/utils/models.ts","webpack://django-oscar-bundles/./src/utils/api.ts","webpack://django-oscar-bundles/./src/bundles/molecules/BundleGroupSearchForm.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_MetaFields.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_ParentProducts.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_UserConfigurableBundles.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_ConcreteBundles.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_Actions.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/BundleGroupEditForm.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/BundleGroupTableRow.tsx","webpack://django-oscar-bundles/./src/bundles/BundleGroupTable.tsx","webpack://django-oscar-bundles/./src/bundles.tsx","webpack://django-oscar-bundles/webpack/bootstrap","webpack://django-oscar-bundles/webpack/runtime/compat get default export","webpack://django-oscar-bundles/webpack/runtime/define property getters","webpack://django-oscar-bundles/webpack/runtime/global","webpack://django-oscar-bundles/webpack/runtime/hasOwnProperty shorthand","webpack://django-oscar-bundles/webpack/runtime/make namespace object","webpack://django-oscar-bundles/webpack/runtime/jsonp chunk loading","webpack://django-oscar-bundles/webpack/startup"],"names":["deferred","result","isLeft","Error","left","join","right","nullable","type","optional","FileType","super","f","File","u","c","this","is","_tag","file","DRFSelectOption","value","display_name","DRFSelectOptions","BaseField","fieldType","required","read_only","label","help_text","IntegerField","BooleanField","DatetimeField","StringField","max_length","ChoiceField","choices","Field","DRFOptionsResponse","name","description","renders","parses","actions","GET","HEAD","OPTIONS","POST","PUT","PATCH","DELETE","Product","id","dashboard_url","product_class","title","slug","is_parent","is_child","parent","children","Products","Range","Ranges","ConcreteBundle","triggering_product","suggested_products","UserConfigurableBundle","suggested_range","quantity","BundleGroup","bundle_type","headline","image","newImage","clearImage","triggering_parents","suggested_parents","concrete_bundles","user_configurable_bundles","BundleGroups","CSRF_HEADER","getCSRFToken","fetchData","endpoint","set","listBundleGroups","resp","decode","body","listProducts","listRanges","BundleGroupSearchForm","self","className","onSubmit","e","preventDefault","htmlFor","gettext","props","searchText","onChange","currentTarget","onClick","BundleGroupMetaFields","field","fieldErrors","errors","classes","length","map","errorMsg","i","key","group","pathParts","split","fileName","target","href","checked","onClearImage","disabled","isSaving","buildFormGroupClasses","bundleType","onEdit","bundleTypeChoices","choice","buildErrors","maxLength","cols","rows","buildCurrentImage","onSelectImage","ParentProductsEditForm","products","filter","p","sort","a","b","localeCompare","extras","forEach","parentProductSelectOptions","getParentProductSelectOptions","isMulti","o","triggeringParents","includes","onSelectParent","bind","options","isDisabled","suggestedParents","helpText","ranges","quantityOptions","push","triggerParent","suggestOptions","getRangeSelectOptions","getQuantitySelectOptions","linkedRanges","rangeID","range","isClearable","onLinkedRangesChange","onLinkedRangeQuantityChange","triggerParentID","getProduct","buildBundleRows","buildParentRows","suggestParent","triggerOptions","getChildProductSelectOptions","trigger","selectValue","linkedProducts","sid","suggestion","onLinkedProductsChange","parentCombinations","triggerID","suggestionID","Object","values","combination","BundleGroupEditFormActions","onCancel","_isSelectOptionArray","opts","undefined","_isSelectOption","BundleGroupEditForm","setState","state","files","rangeIndex","option","r","onLinkedRangesQuantityChange","ids","newIDs","concat","_ids","indexOf","onSave","data","keys","tID","parseInt","tProduct","preExistingBundle","find","suggestionIDs","sID","sProduct","productID","productIdx","bundle","fillProductIdx","nextProps","BundleGroupTableRow","msgFormat","msg","interpolate","confirm","onDelete","productIDs","rangeIDs","suggestedProducts","suggestedRanges","buildProductList","buildRangeList","src","width","buildGroupActions","modalStyles","overlay","backgroundColor","zIndex","content","top","bottom","marginRight","transform","minWidth","maxWidth","maxHeight","BundleGroupTable","groups","selectedGroup","editModalOpen","isLoading","formErrors","onSearchTextChange","text","onCreate","openCreateModal","onOpenEditModal","onCloseModal","onSaveBundleGroup","req","send","_saveBundleGroupData","Promise","resolve","attach","_saveBundleGroupImage","saveBundleGroup","bundleGroupURL","loadData","err","response","onDeleteBundleGroup","loading","all","concreteBundleProductChoiceURL","userConfigurableBundleRangeChoiceURL","setBundleTypeChoices","setGroups","setProducts","setRanges","idx","builder","ref","g","add","search","gid","trim","results","getSearchResults","colSpan","contentLabel","style","isOpen","buildGroupRows","buildEditModal","elem","document","querySelector","dataset","bundlegroupApi","concreteBundleURL","concretebundleApi","concretebundleProductChoiceApi","userConfigurableBundleURL","userconfigurablebundleApi","userconfigurablebundleRangeChoiceApi","component","render","main","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","definition","defineProperty","enumerable","get","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","678","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"mappings":"gBAAIA,E,8SCKG,MAAM,EAAYC,IACrB,IAAI,IAAAC,QAAOD,GACP,MAAM,IAAIE,OAAM,QAAQF,EAAOG,MAAMC,KAAK,OAE9C,OAAOJ,EAAOK,OAGZC,EAAgCC,GAC3B,KAAQ,CAAC,KAAQA,IAGfC,EAAgCD,GAClC,KAAQ,CAAC,KAAaA,IAGjC,MAAME,UAAiB,KAEnB,cACIC,MACI,UACCC,GACUA,aAAaC,OAExB,CAACC,EAAGC,IACOC,KAAKC,GAAGH,GAAK,KAAUA,GAAK,KAAUA,EAAGC,IAEpD,MAVC,KAAAG,KAAqB,cAclC,MAAMC,EAAO,IAAIT,EAIJU,EAAkB,KAAY,CACvCC,MAAO,KACPC,aAAc,OAELC,EAAmB,KAAgBH,GAEnCI,EAA+BC,GACjC,KAAY,CACfjB,KAAMiB,EACNC,SAAU,KACVC,UAAW,KACXC,MAAO,KACPC,UAAWpB,EAAS,QAIfqB,EAAeN,EAAU,KAAU,YAEnCO,EAAeP,EAAU,KAAU,YAEnCQ,EAAgBR,EAAU,KAAU,aAEpCS,EAAc,KAAe,CACtCT,EAAU,KAAU,WACpB,KAAY,CACRU,WAAYzB,EAAS,UAIhB0B,EAAc,KAAe,CACtCX,EAAU,KAAU,WACpB,KAAY,CACRY,QAASb,MAIJc,EAAQ,KAAQ,CACzBP,EACAC,EACAC,EACAC,EACAE,EACA,OAaSG,GAVa,KAAQ,CAC9B,KAAU,OACV,KAAU,QACV,KAAU,WACV,KAAU,QACV,KAAU,OACV,KAAU,SACV,KAAU,YAGoB,KAAY,CAC1CC,KAAM,KACNC,YAAa,KACbC,QAAS,KAAgB,MACzBC,OAAQ,KAAgB,MACxBC,QAAS,KAAY,CACjBC,IAAKnC,EAAS,KAAS,KAAU4B,IACjCQ,KAAMpC,EAAS,KAAS,KAAU4B,IAClCS,QAASrC,EAAS,KAAS,KAAU4B,IACrCU,KAAMtC,EAAS,KAAS,KAAU4B,IAClCW,IAAKvC,EAAS,KAAS,KAAU4B,IACjCY,MAAOxC,EAAS,KAAS,KAAU4B,IACnCa,OAAQzC,EAAS,KAAS,KAAU4B,SAO/Bc,EAAU,KAAY,CAC/BC,GAAI,KACJC,cAAe,KACfC,cAAe/C,EAAS,KAAY,CAChC6C,GAAI,KACJb,KAAM,QAEVgB,MAAO,KACPC,KAAM,KACNC,UAAW,KACXC,SAAU,KACVC,OAAQpD,EAAS,MACjBqD,SAAU,KAAQ,QAETC,EAAW,KAAQV,GAInBW,EAAQ,KAAY,CAC7BV,GAAI,KACJC,cAAe,KACfd,KAAM,KACNiB,KAAM,KACNhB,YAAa,OAEJuB,EAAS,KAAQD,GAIjBE,EAAiB,KAAY,CACtCZ,GAAI7C,EAAS,MACb0D,mBAAoB,KACpBC,mBAAoB,KAAQ,QAMnBC,GAJkB,KAAQH,GAID,KAAY,CAC9CZ,GAAI7C,EAAS,MACb0D,mBAAoB,KACpBG,gBAAiB,KACjBC,SAAU,QAMDC,GAJ0B,KAAQH,GAIpB,KAAY,CACnCf,GAAI7C,EAAS,MACbgE,YAAa,KACbhC,KAAM,KACNC,YAAa,KACbgC,SAAU,KACVC,MAAOhE,EAASF,EAAS,OACzBmE,SAAUjE,EAASF,EAASY,IAC5BwD,WAAYlE,EAAS,MACrBmE,mBAAoB,KAAQ,MAC5BC,kBAAmB,KAAQ,MAC3BC,iBAAkB,KAAQd,GAC1Be,0BAA2B,KAAQZ,MAE1Ba,EAAe,KAAQV,GCxJ9BW,EAAc,cAGdC,EAAe,WACjB,OAAO,QAAY,cAAgB,IAIjCC,EAAmBC,IAAoB,0CACzC,OAAO,QACEA,GACJC,IAAI,SAAU,uBAkBVC,EAA0BF,IAA6C,0CAChF,MAAMG,QAAaJ,EAAUC,GAC7B,OAAO,EAAMJ,EAAaQ,OAAOD,EAAKE,UAI7BC,EAAsBN,IAAyC,0CACxE,MAAMG,QAAaJ,EAAUC,GAC7B,OAAO,EAAMvB,EAAS2B,OAAOD,EAAKE,UAIzBE,EAAoBP,IAAuC,0CACpE,MAAMG,QAAaJ,EAAUC,GAC7B,OAAO,EAAMrB,EAAOyB,OAAOD,EAAKE,UCrDpC,MAAMG,UAA8B,gBAEhC,SACI,MAAMC,EAAO7E,KAgBb,OACI,uBAAK8E,UAAU,2BACX,wBAAMA,UAAU,cAAcC,SANrB,SAASC,GACtBA,EAAEC,mBAMM,wBAAMH,UAAU,cACZ,yBAAOI,QAAQ,WAAWC,QAAQ,YAClC,yBACIL,UAAU,eACV1C,GAAG,UACH/B,MAAOL,KAAKoF,MAAMC,WAClBC,SAvBH,SAASN,GACtBA,EAAEC,iBACFJ,EAAKO,MAAME,SAASN,EAAEO,cAAclF,WAwB3B,IACD,0BACIb,KAAK,SACLsF,UAAU,oBACVU,QAzBA,SAASR,GACrBA,EAAEC,iBACFJ,EAAKO,MAAME,SAAS,MAyBPH,QAAQ,oBAQjC,Q,mBCtBM,MAAOM,UAA8B,gBAE/B,sBAAuBC,GAC3B,MAAMC,EAAc3F,KAAKoF,MAAMQ,OAAOF,GAChCG,EAAwC,CAC1C,cAAc,EACd,cAAaF,GACNA,EAAYG,OAAS,GAGhC,OAAO,IAAWD,GAId,YAAaH,GACjB,OAAQ1F,KAAKoF,MAAMQ,OAAOF,IAAU,IAAIK,KAAI,CAACC,EAAUC,IAE/C,wBAAMC,IAAKD,EAAGnB,UAAU,cACpB,qBAAGA,UAAU,uBAA0B,IAAKkB,KAOpD,oBACJ,IAAKhG,KAAKoF,MAAMe,QAAUnG,KAAKoF,MAAMe,MAAM1C,MACvC,OAAO,KAEX,MAAM2C,EAAYpG,KAAKoF,MAAMe,MAAM1C,MAAM4C,MAAM,KACzCC,EAAWF,EAAUA,EAAUN,OAAS,GAC9C,OACI,4BACKX,QAAQ,c,IAAe,qBAAGoB,OAAO,SAASC,KAAMxG,KAAKoF,MAAMe,MAAM1C,OAAQ6C,GACzE,IACD,yBAAO9G,KAAK,WACL4C,GAAG,6BACHqE,QAASzG,KAAKoF,MAAMzB,WACpB2B,SAAUtF,KAAKoF,MAAMsB,aACrBC,SAAU3G,KAAKoF,MAAMwB,WAC3B,IACD,yBAAO1B,QAAQ,8BAA8BC,QAAQ,WAMjE,SACI,MAAM5C,EAAQvC,KAAKoF,MAAMe,MACnBhB,QAAQ,qBACRA,QAAQ,uBACd,OACI,uBAAKL,UAAU,wCACX,0BAAKvC,GACL,uBAAKuC,UAAW9E,KAAK6G,sBAAsB,eACvC,yBAAO3B,QAAQ,gBAAgBJ,UAAU,iBAAiBK,QAAQ,gBAClE,2BACI,0BAAQ/C,GAAG,gBACHb,KAAK,aACLuD,UAAU,eACVzE,MAAOL,KAAKoF,MAAM0B,WAClBxB,SAAUtF,KAAKoF,MAAM2B,OACrBJ,SAAU3G,KAAKoF,MAAMwB,UACxB5G,KAAKoF,MAAM4B,kBAAkBjB,KAAKkB,GAE3B,0BAAQf,IAAKe,EAAO5G,MAAOA,MAAO4G,EAAO5G,OACpC4G,EAAO3G,iBAKvBN,KAAKkH,YAAY,gBAG1B,uBAAKpC,UAAW9E,KAAK6G,sBAAsB,SACvC,yBAAO3B,QAAQ,UAAUJ,UAAU,iBAAiBK,QAAQ,SAC5D,2BACI,yBAAO/C,GAAG,UACHb,KAAK,OACL4F,UAAW,IACXrC,UAAU,eACVzE,MAAOL,KAAKoF,MAAM7D,KAClB+D,SAAUtF,KAAKoF,MAAM2B,OACrBJ,SAAU3G,KAAKoF,MAAMwB,WAC3B5G,KAAKkH,YAAY,UAG1B,uBAAKpC,UAAW9E,KAAK6G,sBAAsB,aACvC,yBAAO3B,QAAQ,cAAcJ,UAAU,iBAAiBK,QAAQ,aAChE,2BACI,4BAAU/C,GAAG,cACNb,KAAK,WACL6F,KAAM,GACNC,KAAM,EACNvC,UAAU,eACVzE,MAAOL,KAAKoF,MAAM5B,SAClB8B,SAAUtF,KAAKoF,MAAM2B,OACrBJ,SAAU3G,KAAKoF,MAAMwB,WAE3B5G,KAAKkH,YAAY,cAG1B,uBAAKpC,UAAW9E,KAAK6G,sBAAsB,gBACvC,yBAAO3B,QAAQ,iBAAiBJ,UAAU,iBAAiBK,QAAQ,gBACnE,2BACI,4BAAU/C,GAAG,iBACHb,KAAK,cACL6F,KAAM,GACNC,KAAM,EACNvC,UAAU,eACVzE,MAAOL,KAAKoF,MAAM5D,YAClB8D,SAAUtF,KAAKoF,MAAM2B,OACrBJ,SAAU3G,KAAKoF,MAAMwB,WAE9B5G,KAAKkH,YAAY,iBAG1B,uBAAKpC,UAAW9E,KAAK6G,sBAAsB,UACvC,yBAAO3B,QAAQ,WAAWJ,UAAU,iBAAiBK,QAAQ,UAC7D,2BACKnF,KAAKsH,oBACN,yBAAOlF,GAAG,WACH5C,KAAK,OACL+B,KAAK,QACLuD,UAAU,eACVQ,SAAUtF,KAAKoF,MAAMmC,cACrBZ,SAAU3G,KAAKoF,MAAMwB,WAC3B5G,KAAKkH,YAAY,a,cC7IpC,MAAOM,UAA+B,gBAEhC,gCACJ,OAAOxH,KAAKoF,MAAMqC,SACbC,QAAQC,IACGA,EAAEjF,WAEbkF,MAAK,CAACC,EAAGC,IACCD,EAAEtF,MAAMwF,cAAcD,EAAEvF,SAElCwD,KAAK4B,IACwB,CACtBtH,MAAOsH,EAAEvF,GACTxB,MAAO+G,EAAEpF,UAOjB,sBAAuBmD,EAA+BsC,GAC1D,MAAMrC,EAAc3F,KAAKoF,MAAMQ,OAAOF,GAChCG,EAAwC,CAC1C,cAAc,EACd,cAAaF,GACNA,EAAYG,OAAS,GAMhC,OAHAkC,EAAOC,SAASnD,IACZe,EAAQf,IAAa,KAElB,IAAWe,GAId,YAAaH,GACjB,OAAQ1F,KAAKoF,MAAMQ,OAAOF,IAAU,IAAIK,KAAI,CAACC,EAAUC,IAE/C,wBAAMC,IAAKD,EAAGnB,UAAU,cACpB,qBAAGA,UAAU,uBAA0B,IAAKkB,KAO5D,SACI,MAAMkC,EAA6BlI,KAAKmI,gCACxC,OACI,uBAAKrD,UAAU,wCACX,0BAAKK,QAAQ,sBACb,yBAAG,0BAAKA,QAAQ,8EAChB,uBAAKL,UAAU,OACX,uBAAKA,UAAW9E,KAAK6G,sBAAsB,qBAAsB,CAAC,cAC9D,yBAAO3B,QAAQ,WAAWJ,UAAU,iBAAiBK,QAAQ,aAC7D,2BACI,gBAAC,KAAM,CAAC5D,KAAK,oBACL6G,SAAS,EACT/H,MAAO6H,EAA2BR,QAAQW,GAAMrI,KAAKoF,MAAMkD,kBAAkBC,SAASF,EAAEhI,SACxFiF,SAAUtF,KAAKoF,MAAMoD,eAAeC,KAAKzI,KAAM,qBAC/C0I,QAASR,EACTS,WAAY3I,KAAKoF,MAAMwB,WAC9B5G,KAAKkH,YAAY,wBAG1B,uBAAKpC,UAAW9E,KAAK6G,sBAAsB,oBAAqB,CAAC,cAC7D,yBAAO3B,QAAQ,WAAWJ,UAAU,iBAAiBK,QAAQ,gBAC7D,2BACI,gBAAC,KAAM,CAAC5D,KAAK,oBACL6G,SAAS,EACT/H,MAAO6H,EAA2BR,QAAQW,GAAMrI,KAAKoF,MAAMwD,iBAAiBL,SAASF,EAAEhI,SACvFiF,SAAUtF,KAAKoF,MAAMoD,eAAeC,KAAKzI,KAAM,oBAC/C0I,QAASR,EACTS,WAAY3I,KAAKoF,MAAMwB,WAC9B5G,KAAKkH,YAAY,0BCpE9C,MAAM2B,EAAW1D,QAAQ,gQAKnB,MAAO,WAAgC,gBAEjC,wBAYJ,OAXqBnF,KAAKoF,MAAM0D,OAC3BlB,MAAK,CAACC,EAAGC,IACCD,EAAEtG,KAAKwG,cAAcD,EAAEvG,QAEjCwE,KAAK4B,IACwB,CACtBtH,MAAOsH,EAAEvF,GACTxB,MAAO+G,EAAEpG,SAQjB,2BACJ,MAAMwH,EAAkC,GACxC,IAAK,IAAI9C,EAAI,EAAGA,EAAI,IAAKA,IACrB8C,EAAgBC,KAAK,CACjB3I,MAAO4F,EACPrF,MAAO,GAAGqF,MAGlB,OAAO8C,EAIH,gBAAiBE,GACrB,MAAMC,EAAiBlJ,KAAKmJ,wBACtBJ,EAAkB/I,KAAKoJ,2BACvBC,EAAerJ,KAAKoF,MAAMiE,aAAaJ,EAAc7G,KAAO,GAOlE,OANIiH,EAAavD,QAAU,GAAuD,OAAlDuD,EAAaA,EAAavD,OAAS,GAAGwD,UAClED,EAAaL,KAAK,CACdM,QAAS,KACTjG,SAAU,IAId,yBAAO6C,IAAK+C,EAAc7G,GAAI0C,UAAU,uCACpC,6BACKuE,EAAatD,KAAI,CAACwD,EAAOtD,IAElB,sBAAIC,IAAKD,GACL,0BACI,qBAAGO,KAAMyC,EAAc5G,cAAekE,OAAO,UAAU0C,EAAc1G,QAEzE,0BACI,gBAAC,KAAM,CAACiH,aAAa,EACbnJ,MAAO6I,EAAexB,QAAQW,GAAMA,EAAEhI,QAAUkJ,EAAMD,UACtDZ,QAASQ,EACT5D,SAAUtF,KAAKoF,MAAMqE,qBAAqBhB,KAAKzI,KAAMiJ,EAAehD,GACpE0C,WAAY3I,KAAKoF,MAAMwB,YAEnC,0BACI,gBAAC,KAAM,CAACvG,MAAO0I,EAAgBrB,QAAQW,GAAyB,OAAlBkB,EAAMD,SAAoBjB,EAAEhI,QAAUkJ,EAAMlG,WAClFqF,QAASK,EACTzD,SAAUtF,KAAKoF,MAAMsE,4BAA4BjB,KAAKzI,KAAMiJ,EAAehD,GAC3E0C,WAAY3I,KAAKoF,MAAMwB,UAA8B,OAAlB2C,EAAMD,gBAWzE,kBACJ,OAAItJ,KAAKoF,MAAMkD,kBAAkBxC,QAAU,EAEnC,uBAAKhB,UAAU,OACX,uBAAKA,UAAU,aACX,yBAAG,0BAAKK,QAAQ,oEAM5B,uBAAKL,UAAU,OACX,uBAAKA,UAAU,YACX,0BAAI,8BAASK,QAAQ,qBAEzB,uBAAKL,UAAU,YACX,0BAAI,8BAASK,QAAQ,sBAEzB,uBAAKL,UAAU,YACX,0BAAI,8BAASK,QAAQ,yBAEzB,uBAAKL,UAAU,aACV9E,KAAKoF,MAAMkD,kBAAkBvC,KAAK4D,IAC/B,MAAMV,EAAgBjJ,KAAKoF,MAAMwE,WAAWD,GAC5C,OAAO3J,KAAK6J,gBAAgBZ,QAQhD,SACI,OACI,uBAAKnE,UAAU,wCACX,0BAAKK,QAAQ,4CACb,yBACI,0BAAK0D,IAER7I,KAAK8J,oBCvHhB,MAAO,WAAwB,gBAEzB,6BAA8BnH,GAClC,OAAO3C,KAAKoF,MAAMqC,SACbC,QAAQC,IACGA,EAAElF,YAAckF,EAAEvF,KAAOO,EAAOP,IAAMuF,EAAEhF,SAAWA,EAAOP,MAErEwF,MAAK,CAACC,EAAGC,IACCD,EAAEtF,MAAMwF,cAAcD,EAAEvF,SAElCwD,KAAK4B,IACwB,CACtBtH,MAAOsH,EAAEvF,GACTxB,MAAO+G,EAAEpF,UAOjB,gBAAiB0G,EAAyBc,GAC9C,MAAMC,EAAiBhK,KAAKoF,MAAMqC,SAC7BC,QAAQC,IACGA,EAAElF,YAAckF,EAAEvF,KAAO6G,EAAc7G,IAAMuF,EAAEhF,SAAWsG,EAAc7G,MAEnFwF,MAAK,CAACC,EAAGC,IACCD,EAAEtF,MAAMwF,cAAcD,EAAEvF,SAEjC2G,EAAiBlJ,KAAKiK,6BAA6BF,GACzD,OACI,yBAAOjF,UAAU,uCACb,6BACKkF,EAAejE,KAAKmE,IACjB,MAAMC,GAAenK,KAAKoF,MAAMgF,eAAeF,EAAQ9H,KAAO,IACzDsF,QAAQ2C,IACL,MAAMC,EAAatK,KAAKoF,MAAMwE,WAAWS,GACzC,OAAOC,EAAWlI,KAAO2H,EAAc3H,IAAMkI,EAAW3H,SAAWoH,EAAc3H,MAEzF,OACI,sBAAI8D,IAAKgE,EAAQ9H,IACb,0BACI,qBAAGoE,KAAM0D,EAAQ7H,cAAekE,OAAO,UAAU2D,EAAQ3H,QAE7D,0BACI,gBAAC,KAAM,CAAC6F,SAAS,EACT/H,MAAO6I,EAAexB,QAAQW,GAAM8B,EAAY5B,SAASF,EAAEhI,SAC3DqI,QAASQ,EACT5D,SAAUtF,KAAKoF,MAAMmF,uBAAuB9B,KAAKzI,KAAMkK,EAASH,GAChEpB,WAAY3I,KAAKoF,MAAMwB,kBAWvD,kBAKJ,GAAI5G,KAAKoF,MAAMkD,kBAAkBxC,QAAU,GAAK9F,KAAKoF,MAAMwD,iBAAiB9C,QAAU,EAClF,OACI,uBAAKhB,UAAU,OACX,uBAAKA,UAAU,aACX,yBAAG,0BAAKK,QAAQ,gGAKhC,MAAMqF,EAAsD,GAa5D,OATAxK,KAAKoF,MAAMkD,kBAAkBL,SAASwC,IAClCzK,KAAKoF,MAAMwD,iBAAiBX,SAASyC,IAEjCF,EALG,GAIkBC,KAAWC,KACN,CACtBzB,cAAejJ,KAAKoF,MAAMwE,WAAWa,GACrCV,cAAe/J,KAAKoF,MAAMwE,WAAWc,UAI1CC,OAAOC,OAAOJ,GAAoBzE,KAAI,CAAC8E,EAAa5E,IAEnD,uBAAKC,IAAKD,EAAGnB,UAAU,OACnB,uBAAKA,UAAU,YACX,0BAAI,8BAAS+F,EAAY5B,cAAc1G,O,IAAgB,0BAAK4C,QAAQ,uBAExE,uBAAKL,UAAU,YACX,0BAAI,8BAAS+F,EAAYd,cAAcxH,O,IAAgB,0BAAK4C,QAAQ,0BAExE,uBAAKL,UAAU,aACV9E,KAAK6J,gBAAgBgB,EAAY5B,cAAe4B,EAAYd,mBAQjF,SACI,OACI,uBAAKjF,UAAU,wCACX,0BAAKK,QAAQ,qCACb,yBAAG,0BACEA,QAAQ,kIAEZnF,KAAK8J,oBC3HhB,MAAOgB,WAAmC,gBAE5C,SACI,OACI,uBAAKhG,UAAU,wCACX,uBAAKA,UAAU,cACX,qBAAGA,UAAU,oBAAoBU,QAASxF,KAAKoF,MAAM2F,UAAW5F,QAAQ,WACvE,IACD,0BAAQL,UAAU,kBAAkBtF,KAAK,UAAU2F,QAAQ,YCiC/E,MAAM6F,GAAwBC,KACjBA,QAAyDC,IAAhDD,EAAqCnF,OAGrDqF,GAAmBF,KACZA,IAASD,GAAqBC,GAM3C,MAAMG,WAA4B,gBAK9B,YAAahG,GACTzF,MAAMyF,GA0DO,KAAA2B,OAAU/B,IACvB,MAAMzD,EAAOyD,EAAEO,cAAchE,KACvBlB,EAAQ2E,EAAEO,cAAclF,MAC9BL,KAAKqL,UAAUC,GACX,+BAAWA,GAAK,CAAG,CAAC/J,GAAOlB,OAKlB,KAAAkH,cAAiBvC,IAC9B,IAAKA,EAAEO,cAAcgG,MACjB,OAEJ,MAAMpL,EAAO6E,EAAEO,cAAcgG,MAAM,GACnCvL,KAAKqL,SAAS,CACV5H,MAAOtD,KAKE,KAAAqI,eAAiB,CAACjH,EAAgD0J,KAC/E,IAAIvC,EAIAA,EAHCuC,OAEuDC,IAAhDD,EAAqCnF,OACnC,CAACmF,GAEDA,EAJA,GAMdjL,KAAKqL,UAAUC,GACX,+BAAWA,GAAK,CAAE,CAAC/J,GAAOmH,EAAQ3C,KAAKsC,GAAeA,EAAEhI,aAK/C,KAAAoJ,qBAAuB,CAACS,EAAmBsB,EAAoBP,KAC5E,IAAIQ,EAA8B,KAClC,GAAIN,GAAgBF,GAChBQ,EAASR,OACN,GAAID,GAAqBC,GAC5B,MAAM,IAAI9L,MAAM,2DAEpBa,KAAKqL,UAAUC,IACX,MAAMjC,EAAe,OAAH,UACXiC,EAAMjC,cAkBb,OAhBIoC,GACKpC,EAAaa,EAAQ9H,MACtBiH,EAAaa,EAAQ9H,IAAM,IAE/BiH,EAAaa,EAAQ9H,IAAIoJ,GAAW,+BAC5BnC,EAAaa,EAAQ9H,IAAIoJ,IAAe,IAAG,CAC/ClC,QAASmC,EAAOpL,MAChBgD,SAAU,aAGPgG,EAAaa,EAAQ9H,IAAIoJ,GAChCnC,EAAaa,EAAQ9H,IAAMiH,EAAaa,EAAQ9H,IAAIsF,QAAQgE,KAAQA,IAChErC,EAAaa,EAAQ9H,IAAI0D,QAAU,UAC5BuD,EAAaa,EAAQ9H,KAGpC,+BAAWkJ,GAAK,CAAEjC,aAAcA,QAKvB,KAAAsC,6BAA+B,CAC5CzB,EACAsB,EACAP,KAEA,IAAIQ,EAAuB,CAAEpL,MAAO,EAAGO,MAAO,KAC9C,GAAIuK,GAAgBF,GAChBQ,EAASR,OACN,GAAID,GAAqBC,GAC5B,MAAM,IAAI9L,MAAM,6DAEpBa,KAAKqL,UAAUC,IACX,MAAMjC,EAAe,OAAH,UACXiC,EAAMjC,cAQb,OANIA,EAAaa,EAAQ9H,KAAOiH,EAAaa,EAAQ9H,IAAIoJ,KACrDnC,EAAaa,EAAQ9H,IAAIoJ,GAAW,+BAC5BnC,EAAaa,EAAQ9H,IAAIoJ,IAAY,CACzCnI,SAAUoI,EAAOpL,SAGzB,+BAAWiL,GAAK,CAAEjC,aAAcA,QAKvB,KAAAkB,uBAAyB,CACtCL,EACAH,EACAkB,KAEA,IAAIvC,EAIAA,EAHCuC,EAEME,GAAgBF,GACb,CAACA,GAEDA,EAJA,GAMd,MAAMW,EAAMlD,EAAQ3C,KAAKsC,GAAeA,EAAEhI,QAC1CL,KAAKqL,UAAUC,IACX,MAKMO,GALUP,EAAMlB,eAAeF,EAAQ9H,KAAO,IAC/CsF,QAAQ2C,IACL,MAAMC,EAAatK,KAAK4J,WAAWS,GACnC,OAAOC,EAAWlI,KAAO2H,EAAc3H,IAAMkI,EAAW3H,SAAWoH,EAAc3H,MAGpF0J,OAAOF,GACPlE,QAAO,CAACtF,EAAI6D,EAAG8F,IACLA,EAAKC,QAAQ5J,KAAQ6D,IAE9BmE,EAAiB,OAAH,wBAAOkB,EAAMlB,gBAAc,CAAE,CAACF,EAAQ9H,IAAKyJ,IAC/D,sCAAWP,GAAK,CAAElB,eAAgBA,QAKzB,KAAAW,SAAY/F,IACzBA,EAAEC,iBACFjF,KAAKoF,MAAM2F,YAIE,KAAAkB,OAAUjH,IACvBA,EAAEC,iBAEF,MAAMiH,EAAqB,CACvB9J,GAAIpC,KAAKoF,MAAMe,MAAQnG,KAAKoF,MAAMe,MAAM/D,GAAK,KAC7CmB,YAAavD,KAAKsL,MAAMxE,WACxBvF,KAAMvB,KAAKsL,MAAM/J,KACjBC,YAAaxB,KAAKsL,MAAM9J,YACxBgC,SAAUxD,KAAKsL,MAAM9H,SACrBC,MAAOzD,KAAKoF,MAAMe,MAAQnG,KAAKoF,MAAMe,MAAM1C,MAAQ,GACnDC,SAAU1D,KAAKsL,MAAM3H,WAAa,KAAO3D,KAAKsL,MAAM7H,MACpDE,WAAY3D,KAAKsL,MAAM3H,WACvBC,mBAAoB5D,KAAKsL,MAAMhD,kBAC/BzE,kBAAmB7D,KAAKsL,MAAM1C,iBAC9B9E,iBAAkB,GAClBC,0BAA2B,IAG/B4G,OAAOwB,KAAKnM,KAAKsL,MAAMjC,cAAcpB,SAASmE,IAC1C,MAAM3B,EAAY4B,SAASD,EAAK,IAC1BE,EAAWtM,KAAK4J,WAAWa,KACqB,IAAlDyB,EAAKtI,mBAAmBoI,QAAQM,EAASlK,KAAgBkK,EAAS3J,SAAgE,IAAtDuJ,EAAKtI,mBAAmBoI,QAAQM,EAAS3J,UAGpG3C,KAAKsL,MAAMjC,aAAaoB,GAChCxC,SAAQ,EAAEqB,UAASjG,eAC5B,IAAKiG,IAAYjG,EACb,OAEJ,IAAIkJ,EACAvM,KAAKoF,MAAMe,QACXoG,EAAoBvM,KAAKoF,MAAMe,MAAMpC,0BAA0ByI,MAAM1E,GAC1DA,EAAE7E,qBAAuBwH,GAAa3C,EAAE1E,kBAAoBkG,KAG3E4C,EAAKnI,0BAA0BiF,KAAK,CAChC5G,GAAImK,EAAoBA,EAAkBnK,GAAK,KAC/Ca,mBAAoBwH,EACpBrH,gBAAiBkG,EACjBjG,SAAUA,UAKtBsH,OAAOwB,KAAKnM,KAAKsL,MAAMlB,gBAAgBnC,SAASmE,IAC5C,MAAM3B,EAAY4B,SAASD,EAAK,IAC1BE,EAAWtM,KAAK4J,WAAWa,GACjC,IAAsD,IAAlDyB,EAAKtI,mBAAmBoI,QAAQM,EAASlK,OAAgBkK,EAAS3J,SAAgE,IAAtDuJ,EAAKtI,mBAAmBoI,QAAQM,EAAS3J,SACrH,OAGJ,IAAI4J,EACAvM,KAAKoF,MAAMe,QACXoG,EAAoBvM,KAAKoF,MAAMe,MAAMrC,iBAAiB0I,MAAM1E,GACjDA,EAAE7E,qBAAuBwH,KAIxC,MAAMgC,EAAgBzM,KAAKsL,MAAMlB,eAAeK,GAC3C/C,QAAQgF,IACL,MAAMC,EAAW3M,KAAK4J,WAAW8C,GACjC,OAAwD,IAAjDR,EAAKrI,kBAAkBmI,QAAQW,EAASvK,MAAeuK,EAAShK,SAA+D,IAArDuJ,EAAKrI,kBAAkBmI,QAAQW,EAAShK,WAG7H8J,EAAc3G,QAAU,GAI5BoG,EAAKpI,iBAAiBkF,KAAK,CACvB5G,GAAImK,EAAoBA,EAAkBnK,GAAK,KAC/Ca,mBAAoBwH,EACpBvH,mBAAoBuJ,OAI5BzM,KAAKoF,MAAM6G,OAAOC,IAIL,KAAAxF,aAAgB1B,IAC7BhF,KAAKqL,SAAS,CACV1H,WAAYqB,EAAEO,cAAckB,WAKnB,KAAAmD,WAAcgD,GACpB5M,KAAK6M,WAAWD,GAhRvB,MAAMvD,EAAuC,IACjBjE,EAAMe,MAAQf,EAAMe,MAAMpC,0BAA4B,IAC9DkE,SAAS6E,IACpBzD,EAAayD,EAAO7J,sBACrBoG,EAAayD,EAAO7J,oBAAsB,IAE9CoG,EAAayD,EAAO7J,oBAAoB+F,KAAK,CACzCM,QAASwD,EAAO1J,gBAChBC,SAAUyJ,EAAOzJ,cAKzB,MAAM+G,EAA2C,IACzBhF,EAAMe,MAAQf,EAAMe,MAAMrC,iBAAmB,IACrDmE,SAAS6E,IAChB1C,EAAe0C,EAAO7J,sBACvBmH,EAAe0C,EAAO7J,oBAAsB,IAEhDmH,EAAe0C,EAAO7J,oBAAsBmH,EAAe0C,EAAO7J,oBAC7D6I,OAAOgB,EAAO5J,oBACdwE,QAAO,CAACtF,EAAI6D,EAAG2F,IACLA,EAAII,QAAQ5J,KAAQ6D,OAKvC,MAAMqF,EAAgB,CAClBxE,WAAY,GACZvF,KAAM,GACNC,YAAa,GACbgC,SAAU,GACVC,MAAO,KACPE,YAAY,EACZ2E,kBAAmB,GACnBM,iBAAkB,GAClBS,aAAcA,EACde,eAAgBA,GAEhBhF,EAAMe,OACNmF,EAAMxE,WAAa1B,EAAMe,MAAM5C,YAC/B+H,EAAM/J,KAAO6D,EAAMe,MAAM5E,KACzB+J,EAAM9J,YAAc4D,EAAMe,MAAM3E,YAChC8J,EAAM9H,SAAW4B,EAAMe,MAAM3C,SAC7B8H,EAAMhD,kBAAoBlD,EAAMe,MAAMvC,mBACtC0H,EAAM1C,iBAAmBxD,EAAMe,MAAMtC,mBAC9BuB,EAAM4B,kBAAkBlB,OAAS,IACxCwF,EAAMxE,WAAa1B,EAAM4B,kBAAkB,GAAG3G,OAElDL,KAAKsL,MAAQA,EACbtL,KAAK6M,WAAa,GAClB7M,KAAK+M,eAAe3H,EAAMqC,UAiO9B,0BAA2BuF,GACvBhN,KAAK+M,eAAeC,EAAUvF,UAI1B,eAAgBA,GACpBzH,KAAK6M,WAAa,GAClBpF,EAASQ,SAASN,IACd3H,KAAK6M,WAAWlF,EAAEvF,IAAMuF,KAKhC,SACI,OACI,wBAAM7C,UAAU,wBAAwBC,SAAU/E,KAAKiM,QACnD,gBAACxG,EAAqB,CAClBuB,kBAAmBhH,KAAKoF,MAAM4B,kBAC9Bb,MAAOnG,KAAKoF,MAAMe,MAClBS,SAAU5G,KAAKoF,MAAMwB,SACrBhB,OAAQ5F,KAAKoF,MAAMQ,OACnBkB,WAAY9G,KAAKsL,MAAMxE,WACvBvF,KAAMvB,KAAKsL,MAAM/J,KACjBiC,SAAUxD,KAAKsL,MAAM9H,SACrBhC,YAAaxB,KAAKsL,MAAM9J,YACxBiC,MAAOzD,KAAKsL,MAAM7H,MAClBE,WAAY3D,KAAKsL,MAAM3H,WACvBoD,OAAQ/G,KAAK+G,OACbQ,cAAevH,KAAKuH,cACpBb,aAAc1G,KAAK0G,eAEvB,gBAACc,EAAsB,CACnBC,SAAUzH,KAAKoF,MAAMqC,SACrBb,SAAU5G,KAAKoF,MAAMwB,SACrBhB,OAAQ5F,KAAKoF,MAAMQ,OACnB0C,kBAAmBtI,KAAKsL,MAAMhD,kBAC9BM,iBAAkB5I,KAAKsL,MAAM1C,iBAC7BJ,eAAgBxI,KAAKwI,iBAEzB,gBAAC,GAAuB,CACpBM,OAAQ9I,KAAKoF,MAAM0D,OACnBlC,SAAU5G,KAAKoF,MAAMwB,SACrB0B,kBAAmBtI,KAAKsL,MAAMhD,kBAC9Be,aAAcrJ,KAAKsL,MAAMjC,aACzBO,WAAY5J,KAAK4J,WACjBH,qBAAsBzJ,KAAKyJ,qBAC3BC,4BAA6B1J,KAAK2L,+BAEtC,gBAAC,GAAe,CACZlE,SAAUzH,KAAKoF,MAAMqC,SACrBb,SAAU5G,KAAKoF,MAAMwB,SACrB0B,kBAAmBtI,KAAKsL,MAAMhD,kBAC9BM,iBAAkB5I,KAAKsL,MAAM1C,iBAC7BwB,eAAgBpK,KAAKsL,MAAMlB,eAC3BR,WAAY5J,KAAK4J,WACjBW,uBAAwBvK,KAAKuK,yBAEjC,gBAACO,GAA0B,CAACC,SAAU/K,KAAK+K,aAM3D,UC1YA,MAAMkC,WAA4B,gBAEtB,oBACJ,MAAMpI,EAAO7E,KAgBb,OACI,uBAAK8E,UAAU,eACX,uBAAKA,UAAU,YACX,0BAAQA,UAAU,oCAAoCtF,KAAK,SAAQ,cAAa,WAAU,gBAAe,OAAM,gBAAe,SACzH2F,QAAQ,WAAY,IAAI,wBAAML,UAAU,WAE7C,sBAAIA,UAAU,qCACV,qBAAGA,UAAU,gBAAgBU,QAtB9B,SAASR,GACpBA,EAAEC,iBACFJ,EAAKO,MAAM2B,OAAOlC,EAAKO,MAAMe,SAoB8BhB,QAAQ,SACvD,qBAAGL,UAAU,gBAAgBU,QAnB5B,SAASR,GACtBA,EAAEC,iBACF,MAAMiI,EAAY/H,QAAQ,gGACpB+G,EAAO,CACT3K,KAAMsD,EAAKO,MAAMe,MAAM5E,MAErB4L,EAAMC,YAAYF,EAAWhB,GAAM,GACrCmB,QAAQF,IACRtI,EAAKO,MAAMkI,SAASzI,EAAKO,MAAMe,SAW0BhB,QAAQ,cAQrE,iBAAkBoI,GACtB,MAAM9F,EAAWzH,KAAKoF,MAAMqC,SAASC,QAAQC,IACJ,IAA9B4F,EAAWvB,QAAQrE,EAAEvF,MAEhC,OACI,0BACKqF,EAAS1B,KAAK4B,GAEP,sBAAIzB,IAAKyB,EAAEvF,IACP,qBAAGoE,KAAMmB,EAAEtF,eAAgBsF,EAAEpF,WAS7C,iBACJ,MAAMiL,EAAWxN,KAAKoF,MAAMe,MAAMpC,0BAA0BgC,KAAK+G,GAAWA,EAAO1J,kBAC7E0F,EAAS9I,KAAKoF,MAAM0D,OAAOpB,QAAQgE,GAC9B8B,EAASjF,SAASmD,EAAEtJ,MAE/B,OACI,0BACK0G,EAAO/C,KAAK2F,GAEL,sBAAIxF,IAAKwF,EAAEtJ,IACP,qBAAGoE,KAAMkF,EAAErJ,eAAgBqJ,EAAEnK,UASrD,SACI,MAAMsD,EAAO7E,KACP8G,EAAa9G,KAAKoF,MAAM4B,kBAAkBwF,MAAMvF,GAC3CA,EAAO5G,QAAUwE,EAAKO,MAAMe,MAAM5C,cAE7C,IAAIkK,EAAwC,KACxCC,EAAsC,KAiB1C,OAhBI1N,KAAKoF,MAAMe,MAAMtC,oBACjB4J,EACI,gCACI,0BAAKtI,QAAQ,cACZnF,KAAK2N,iBAAiB3N,KAAKoF,MAAMe,MAAMtC,qBAIhD7D,KAAKoF,MAAMe,MAAMpC,0BAA0B+B,OAAS,IACpD4H,EACI,gCACI,0BAAKvI,QAAQ,YACZnF,KAAK4N,mBAKd,sBAAI1H,IAAK,GAAGlG,KAAKoF,MAAMe,MAAM/D,MACzB,0BAAKpC,KAAKoF,MAAMe,MAAM5E,MACtB,0BAAKuF,EAAaA,EAAWxG,aAAe,IAC5C,0BAAI,uBAAKuN,IAAK7N,KAAKoF,MAAMe,MAAM1C,YAASyH,EAAW4C,MAAO,OAC1D,0BACK9N,KAAK2N,iBAAiB3N,KAAKoF,MAAMe,MAAMvC,qBAE5C,0BACK6J,EACAC,GAEL,0BAAK1N,KAAK+N,uBAM1B,UC3GA,kBAAoB,sBAEpB,MAAMC,GAAc,CAChBC,QAAS,CACLC,gBAAiB,wBACjBC,OAAQ,KAEZC,QAAS,CACLC,IAAK,MACLjP,KAAM,MACNE,MAAO,OACPgP,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,SAAU,QACVC,SAAU,SACVC,UAAW,QAkCnB,MAAMC,WAAyB,YAA/B,c,oBAGI,KAAAtD,MAAgB,CACZtE,kBAAmB,GACnB6H,OAAQ,GACRpH,SAAU,GACVqB,OAAQ,GACRzD,WAAY,GACZyJ,cAAe,KACfC,eAAe,EACfnI,UAAU,EACVoI,WAAW,EACXC,WAAY,IAIC,KAAAC,mBAAsBC,IACnCnP,KAAKqL,SAAS,CACVhG,WAAY8J,KAKH,KAAAC,SAAYpK,IACzBA,EAAEC,iBACFjF,KAAKqP,mBAIQ,KAAAC,gBAAmBnJ,IAChCnG,KAAKqL,SAAS,CACVyD,cAAe3I,EAAM/D,GACrB6M,WAAY,GACZF,eAAe,KAKN,KAAAQ,aAAe,KAC5BvP,KAAKqL,SAAS,CACVyD,cAAe,KACfG,WAAY,GACZF,eAAe,KAKN,KAAAS,kBAA2BtD,IAAsB,wCAC9DlM,KAAKqL,SAAS,CAAEzE,UAAU,IAC1B,STFuB,EAAOxC,EAAkB8H,KAA6C,0CACjG,MAAM/F,OAzCmB,EAAO/B,EAAkB+B,KAA8C,0CAChG,MAAMsJ,EAAOtJ,EAAM/D,GACb,UAAc,GAAGgC,IAAW+B,EAAM/D,OAClC,SAAagC,GACb8H,EAAO,OAAH,UAAO/F,UACV+F,EAAKzI,aACLyI,EAAKxI,gBACLwI,EAAKvI,WACZ,MAAMY,QAAakL,EACdpL,IAAI,SAAU,oBACdA,IAAIJ,EAAaC,KACjBwL,KAAKxD,GACV,OAAO,EAAM5I,EAAYkB,OAAOD,EAAKE,UA6BjBkL,CAAqBvL,EAAU8H,GAGnD,OAFAA,EAAK9J,GAAK+D,EAAM/D,QA1BU,EAAOgC,EAAkB+B,KAAsC,0CACzF,IAAKA,EAAM/D,GACP,MAAM,IAAIjD,MAAM,+CAGpB,IAAKgH,EAAMzC,WAAayC,EAAMxC,WAC1B,OAAOiM,QAAQC,UAGnB,IAAIJ,EAAM,UACC,GAAGrL,IAAW+B,EAAM/D,OAC1BiC,IAAI,SAAU,oBACdA,IAAIJ,EAAaC,KAElBiC,EAAMzC,WAAayC,EAAMxC,WACzB8L,EAAMA,EAAIK,OAAO,QAAS3J,EAAMzC,SAAUyC,EAAMzC,SAASnC,MAClD4E,EAAMxC,aACb8L,EAAMA,EAAIC,KAAK,CAAE,MAAS,cAGxBD,KAOAM,CAAsB3L,EAAU8H,GAC/B/F,KSDO6J,CAAgBhQ,KAAKoF,MAAM6K,eAAgB/D,SAC3ClM,KAAKkQ,WACXlQ,KAAKqL,SAAS,CAAEzE,UAAU,IAC1B5G,KAAKuP,eACP,MAAOY,GACLnQ,KAAKqL,SAAS,CACVzE,UAAU,EACVqI,WAAYkB,EAAIC,SAAS3L,WAMpB,KAAA4L,oBAA6BnE,IAAsB,wCTRvC,IAAO9H,EAAkB+B,ESUlD,aTVgC/B,ESSRpE,KAAKoF,MAAM6K,eTTe9J,ESSC+F,GTTqC,0CAC5F,IAAK/F,EAAM/D,GACP,MAAM,IAAIjD,MAAM,6CAEd,WACM,GAAGiF,IAAW+B,EAAM/D,OAC3BiC,IAAI,SAAU,oBACdA,IAAIJ,EAAaC,SSGXlE,KAAKkQ,cAIhB,oBACIlQ,KAAKkQ,WAIK,W,+CACVlQ,KAAKqL,SAAS,CAAE2D,WAAW,IAC3B,MAAMsB,EAAUV,QAAQW,IAAI,ETjHOnM,ESkHVpE,KAAKoF,MAAM6K,gBTlH6D,0CACrG,MAAM1L,QAAa,YACNH,GACRC,IAAI,SAAU,oBACbI,EAAO,EAAMnD,EAAmBkD,OAAOD,EAAKE,OAClD,OAAKA,EAAK9C,QAAQI,KAGJ,EAAMZ,EAAYqD,OAAOC,EAAK9C,QAAQI,KAAKwB,cACnCnC,QAHX,OS6GHkD,EAAiBtE,KAAKoF,MAAM6K,gBAC5BvL,EAAa1E,KAAKoF,MAAMoL,gCACxB7L,EAAW3E,KAAKoF,MAAMqL,wCTrHSrM,MSuHnC,MAAOhD,EAASyN,EAAQpH,EAAUqB,SAAgBwH,EAClDtQ,KAAK0Q,qBAAqBtP,GAC1BpB,KAAK2Q,UAAU9B,GACf7O,KAAK4Q,YAAYnJ,GACjBzH,KAAK6Q,UAAU/H,GACf9I,KAAKqL,SAAS,CAAE2D,WAAW,OAIvB,kBACJhP,KAAKqL,SAAS,CACVyD,cAAe,KACfG,WAAY,GACZF,eAAe,IAKf,UAAWF,GAEf7O,KAAK8Q,IAAM,KAAK,WACZ,MAAMC,EAAU/Q,KAChB+Q,EAAQC,IAAI,MACZD,EAAQrL,MAAM,QACdqL,EAAQrL,MAAM,eACdmJ,EAAO5G,SAASgJ,IACZF,EAAQG,IAAID,SAIpBjR,KAAKqL,SAAS,CACVwD,OAAQA,IAKR,qBAAsBzN,GAC1BpB,KAAKqL,SAAS,CACVrE,kBAAmB5F,IAKnB,YAAaqG,GACjBzH,KAAKqL,SAAS,CACV5D,SAAUA,IAKV,UAAWqB,GACf9I,KAAKqL,SAAS,CACVvC,OAAQA,IAKR,iBAAkBzD,GACtB,OAAKrF,KAAK8Q,IAGM9Q,KAAK8Q,IAAIK,OAAO9L,GAE3BU,KAAK9G,IACF,MAAMmS,EAAM/E,SAASpN,EAAO+R,IAAK,IACjC,OAAOhR,KAAKsL,MAAMuD,OAAOrC,MAAMyE,GACpBA,EAAE7O,KAAOgP,OAGvB1J,QAAQvB,KACIA,IAXN,GAgBP,iBACJ,MAAMd,EAAarF,KAAKsL,MAAMjG,WAAWgM,OACnCC,EAAUjM,EACVrF,KAAKuR,iBAAiBlM,GACtBrF,KAAKsL,MAAMuD,OAEjB,GAAI7O,KAAKsL,MAAM0D,UACX,OACI,0BACI,sBAAIwC,QAJQ,GAIkB,0BAAKrM,QAAQ,eAIvD,GAAImM,EAAQxL,QAAU,EAAG,CACrB,MAAMqH,EAAM9H,EACN+H,YAAYjI,QAAQ,qDAAsD,CAAEE,WAAYA,IAAe,GACvGF,QAAQ,2BACd,OACI,0BACI,sBAAIqM,QAdQ,GAcmBrE,IAI3C,OAAOmE,EAAQvL,KAAKI,GAEZ,gBAAC,GAAmB,CAACD,IAAK,GAAGC,EAAM/D,KACd4E,kBAAmBhH,KAAKsL,MAAMtE,kBAC9Bb,MAAOA,EACPsB,SAAUzH,KAAKsL,MAAM7D,SACrBqB,OAAQ9I,KAAKsL,MAAMxC,OACnB/B,OAAQ/G,KAAKsP,gBACbhC,SAAUtN,KAAKqQ,wBAMxC,iBACJ,MAAMlK,EAAQnG,KAAKsL,MAAMuD,OAAOrC,MAAMyE,GAC3BA,EAAE7O,KAAOpC,KAAKsL,MAAMwD,gBAE/B,OACI,gBAAC,IAAK,CAAC2C,aAActM,QAAQ,qBACtBuM,MAAO1D,GACP2D,OAAQ3R,KAAKsL,MAAMyD,eACtB,gBAAC,GAAmB,CAAC/H,kBAAmBhH,KAAKsL,MAAMtE,kBAC9Bb,MAAOA,GAAS,KAChBsB,SAAUzH,KAAKsL,MAAM7D,SACrBqB,OAAQ9I,KAAKsL,MAAMxC,OACnBlC,SAAU5G,KAAKsL,MAAM1E,SACrBhB,OAAQ5F,KAAKsL,MAAM2D,WACnBlE,SAAU/K,KAAKuP,aACftD,OAAQjM,KAAKwP,qBAM9C,SACI,OACI,2BACI,uBAAK1K,UAAU,eACX,qBAAGA,UAAU,8BAA8BU,QAASxF,KAAKoP,UACrD,qBAAGtK,UAAU,uBAA0B,IAAKK,QAAQ,4BAExD,0BAAKA,QAAQ,mBAEjB,uBAAKL,UAAU,gBACX,0BAAI,qBAAGA,UAAU,kBAAqBK,QAAQ,0BAElD,gBAAC,EAAqB,CAACE,WAAYrF,KAAKsL,MAAMjG,WACvBC,SAAUtF,KAAKkP,qBAEtC,yBAAOpK,UAAU,sCACb,6BACI,0BACI,0BAAKK,QAAQ,SACb,0BAAKA,QAAQ,SACb,0BAAKA,QAAQ,UACb,0BAAKA,QAAQ,aACb,0BAAKA,QAAQ,gBACb,0BAAKA,QAAQ,aAEhBnF,KAAK4R,mBAIb5R,KAAK6R,mBAMtB,WCrRa,WACT,MAAMC,EAAOC,SAASC,cAAc,sBAC9B/B,EAAiB6B,EAAKG,QAAQC,gBAAkB,GAChDC,EAAoBL,EAAKG,QAAQG,mBAAqB,GACtD5B,EAAiCsB,EAAKG,QAAQI,gCAAkC,GAChFC,EAA4BR,EAAKG,QAAQM,2BAA6B,GACtE9B,EAAuCqB,EAAKG,QAAQO,sCAAwC,GAC5FC,EACF,gBAAC,GAAgB,CAACxC,eAAgBA,EAChBkC,kBAAmBA,EACnB3B,+BAAgCA,EAChC8B,0BAA2BA,EAC3B7B,qCAAsCA,KAE5D,IAAAiC,QAAOD,EAAWX,GAGtBa,I,mBChEIC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB5H,IAAjB6H,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,IAOV,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,QAIfH,EAAoBO,EAAIF,EbzBpBlU,EAAW,GACf6T,EAAoBQ,EAAI,SAASpU,EAAQqU,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASzN,EAAI,EAAGA,EAAIjH,EAAS8G,OAAQG,IAAK,CACrCqN,EAAWtU,EAASiH,GAAG,GACvBsN,EAAKvU,EAASiH,GAAG,GACjBuN,EAAWxU,EAASiH,GAAG,GAE3B,IAJA,IAGI0N,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASxN,OAAQ8N,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAa7I,OAAOwB,KAAK0G,EAAoBQ,GAAGQ,OAAM,SAAS3N,GAAO,OAAO2M,EAAoBQ,EAAEnN,GAAKoN,EAASM,OAC3JN,EAASQ,OAAOF,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG1CG,IACF3U,EAAS8U,OAAO7N,IAAK,GACrBhH,EAASsU,KAGX,OAAOtU,EAxBNuU,EAAWA,GAAY,EACvB,IAAI,IAAIvN,EAAIjH,EAAS8G,OAAQG,EAAI,GAAKjH,EAASiH,EAAI,GAAG,GAAKuN,EAAUvN,IAAKjH,EAASiH,GAAKjH,EAASiH,EAAI,GACrGjH,EAASiH,GAAK,CAACqN,EAAUC,EAAIC,IcJ/BX,EAAoBkB,EAAI,SAASd,GAChC,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,WAAa,OAAOhB,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAJ,EAAoBqB,EAAEF,EAAQ,CAAEnM,EAAGmM,IAC5BA,GCLRnB,EAAoBqB,EAAI,SAASlB,EAASmB,GACzC,IAAI,IAAIjO,KAAOiO,EACXtB,EAAoBxK,EAAE8L,EAAYjO,KAAS2M,EAAoBxK,EAAE2K,EAAS9M,IAC5EyE,OAAOyJ,eAAepB,EAAS9M,EAAK,CAAEmO,YAAY,EAAMC,IAAKH,EAAWjO,MCJ3E2M,EAAoB5B,EAAI,WACvB,GAA0B,iBAAfsD,WAAyB,OAAOA,WAC3C,IACC,OAAOvU,MAAQ,IAAIwU,SAAS,cAAb,GACd,MAAOxP,GACR,GAAsB,iBAAXyP,OAAqB,OAAOA,QALjB,GCAxB5B,EAAoBxK,EAAI,SAASqM,EAAKC,GAAQ,OAAOhK,OAAOiK,UAAUC,eAAe1B,KAAKuB,EAAKC,ICC/F9B,EAAoBnH,EAAI,SAASsH,GACX,oBAAX8B,QAA0BA,OAAOC,aAC1CpK,OAAOyJ,eAAepB,EAAS8B,OAAOC,YAAa,CAAE1U,MAAO,WAE7DsK,OAAOyJ,eAAepB,EAAS,aAAc,CAAE3S,OAAO,K,WCAvD,IAAI2U,EAAkB,CACrBC,IAAK,GAaNpC,EAAoBQ,EAAEO,EAAI,SAASsB,GAAW,OAAoC,IAA7BF,EAAgBE,IAGrE,IAAIC,EAAuB,SAASC,EAA4BlJ,GAC/D,IAKI4G,EAAUoC,EALV5B,EAAWpH,EAAK,GAChBmJ,EAAcnJ,EAAK,GACnBoJ,EAAUpJ,EAAK,GAGIjG,EAAI,EAC3B,IAAI6M,KAAYuC,EACZxC,EAAoBxK,EAAEgN,EAAavC,KACrCD,EAAoBO,EAAEN,GAAYuC,EAAYvC,IAGhD,GAAGwC,EAAS,IAAIrW,EAASqW,EAAQzC,GAEjC,IADGuC,GAA4BA,EAA2BlJ,GACrDjG,EAAIqN,EAASxN,OAAQG,IACzBiP,EAAU5B,EAASrN,GAChB4M,EAAoBxK,EAAE2M,EAAiBE,IAAYF,EAAgBE,IACrEF,EAAgBE,GAAS,KAE1BF,EAAgB1B,EAASrN,IAAM,EAEhC,OAAO4M,EAAoBQ,EAAEpU,IAG1BsW,EAAqB1Q,KAAuC,iCAAIA,KAAuC,kCAAK,GAChH0Q,EAAmBtN,QAAQkN,EAAqB1M,KAAK,KAAM,IAC3D8M,EAAmBvM,KAAOmM,EAAqB1M,KAAK,KAAM8M,EAAmBvM,KAAKP,KAAK8M,I,GC7CvF,IAAIC,EAAsB3C,EAAoBQ,OAAEnI,EAAW,CAAC,MAAM,WAAa,OAAO2H,EAAoB,SAC1G2C,EAAsB3C,EAAoBQ,EAAEmC,G","file":"bundles.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import * as t from 'io-ts';\nimport {failure} from 'io-ts/lib/PathReporter';\nimport {Either, isLeft} from 'fp-ts/lib/Either';\n\n\nexport const check = <T>(result: Either<t.Errors, T>): T => {\n    if (isLeft(result)) {\n        throw new Error(failure(result.left).join('\\n'));\n    }\n    return result.right;\n};\n\nconst nullable = <RT extends t.Mixed>(type: RT) => {\n    return t.union([t.null, type]);\n};\n\nexport const optional = <RT extends t.Mixed>(type: RT) => {\n    return t.union([t.undefined, type]);\n};\n\nclass FileType extends t.Type<File> {\n    readonly _tag: 'NumberType' = 'NumberType';\n    constructor() {\n        super(\n            'number',\n            (f): f is File => {\n                return f instanceof File;\n            },\n            (u, c) => {\n                return this.is(u) ? t.success(u) : t.failure(u, c);\n            },\n            t.identity\n        );\n    }\n}\nconst file = new FileType();\n\n\n\nexport const DRFSelectOption = t.interface({\n    value: t.string,\n    display_name: t.string,\n});\nexport const DRFSelectOptions = t.readonlyArray(DRFSelectOption);\n\nexport const BaseField = <T extends string>(fieldType: t.LiteralC<T>) => {\n    return t.interface({\n        type: fieldType,\n        required: t.boolean,\n        read_only: t.boolean,\n        label: t.string,\n        help_text: optional(t.string),\n    });\n};\n\nexport const IntegerField = BaseField(t.literal(\"integer\"));\n\nexport const BooleanField = BaseField(t.literal(\"boolean\"));\n\nexport const DatetimeField = BaseField(t.literal(\"datetime\"));\n\nexport const StringField = t.intersection([\n    BaseField(t.literal(\"string\")),\n    t.interface({\n        max_length: optional(t.number),\n    }),\n]);\n\nexport const ChoiceField = t.intersection([\n    BaseField(t.literal(\"choice\")),\n    t.interface({\n        choices: DRFSelectOptions,\n    }),\n]);\n\nexport const Field = t.union([\n    IntegerField,\n    BooleanField,\n    DatetimeField,\n    StringField,\n    ChoiceField,\n    t.unknown,\n]);\n\nexport const HTTPMethod = t.union([\n    t.literal(\"GET\"),\n    t.literal(\"HEAD\"),\n    t.literal(\"OPTIONS\"),\n    t.literal(\"POST\"),\n    t.literal(\"PUT\"),\n    t.literal(\"PATCH\"),\n    t.literal(\"DELETE\"),\n]);\n\nexport const DRFOptionsResponse = t.interface({\n    name: t.string,\n    description: t.string,\n    renders: t.readonlyArray(t.string),\n    parses: t.readonlyArray(t.string),\n    actions: t.interface({\n        GET: optional(t.record(t.string, Field)),\n        HEAD: optional(t.record(t.string, Field)),\n        OPTIONS: optional(t.record(t.string, Field)),\n        POST: optional(t.record(t.string, Field)),\n        PUT: optional(t.record(t.string, Field)),\n        PATCH: optional(t.record(t.string, Field)),\n        DELETE: optional(t.record(t.string, Field)),\n    }),\n});\n\n\n\n\nexport const Product = t.interface({\n    id: t.number,\n    dashboard_url: t.string,\n    product_class: nullable(t.interface({\n        id: t.number,\n        name: t.string,\n    })),\n    title: t.string,\n    slug: t.string,\n    is_parent: t.boolean,\n    is_child: t.boolean,\n    parent: nullable(t.number),\n    children: t.array(t.number),\n});\nexport const Products = t.array(Product);\n\n\n\nexport const Range = t.interface({\n    id: t.number,\n    dashboard_url: t.string,\n    name: t.string,\n    slug: t.string,\n    description: t.string,\n});\nexport const Ranges = t.array(Range);\n\n\n\nexport const ConcreteBundle = t.interface({\n    id: nullable(t.number),\n    triggering_product: t.number,\n    suggested_products: t.array(t.number),\n});\nexport const ConcreteBundles = t.array(ConcreteBundle);\n\n\n\nexport const UserConfigurableBundle = t.interface({\n    id: nullable(t.number),\n    triggering_product: t.number,\n    suggested_range: t.number,\n    quantity: t.number,\n});\nexport const UserConfigurableBundles = t.array(UserConfigurableBundle);\n\n\n\nexport const BundleGroup = t.interface({\n    id: nullable(t.number),\n    bundle_type: t.string,\n    name: t.string,\n    description: t.string,\n    headline: t.string,\n    image: optional(nullable(t.string)),\n    newImage: optional(nullable(file)),\n    clearImage: optional(t.boolean),\n    triggering_parents: t.array(t.number),\n    suggested_parents: t.array(t.number),\n    concrete_bundles: t.array(ConcreteBundle),\n    user_configurable_bundles: t.array(UserConfigurableBundle),\n});\nexport const BundleGroups = t.array(BundleGroup);\n","import request from 'superagent';\nimport cookies from 'js-cookie';\nimport {\n    IDRFSelectOption,\n    IBundleGroup,\n    IProduct,\n    IRange,\n    IConcreteBundle,\n    IUserConfigurableBundle,\n} from './models.interfaces';\nimport {\n    check,\n    ChoiceField,\n    DRFOptionsResponse,\n    BundleGroup,\n    BundleGroups,\n    Products,\n    Ranges,\n    ConcreteBundles,\n    UserConfigurableBundles,\n} from './models';\n\n\nconst CSRF_HEADER = 'X-CSRFToken';\n\n\nconst getCSRFToken = function() {\n    return cookies.get('csrftoken') || '';\n};\n\n\nconst fetchData = async (endpoint: string) => {\n    return request\n        .get(endpoint)\n        .set('Accept', 'application/json');\n};\n\n\nexport const getBundleTypeChoices = async (endpoint: string): Promise<ReadonlyArray<IDRFSelectOption>> => {\n    const resp = await request\n        .options(endpoint)\n        .set('Accept', 'application/json');\n    const body = check(DRFOptionsResponse.decode(resp.body));\n    if (!body.actions.POST) {\n        return [];\n    }\n    const field = check(ChoiceField.decode(body.actions.POST.bundle_type));\n    const choices = field.choices;\n    return choices;\n};\n\n\nexport const listBundleGroups = async (endpoint: string): Promise<IBundleGroup[]> => {\n    const resp = await fetchData(endpoint);\n    return check(BundleGroups.decode(resp.body));\n};\n\n\nexport const listProducts = async (endpoint: string): Promise<IProduct[]> => {\n    const resp = await fetchData(endpoint);\n    return check(Products.decode(resp.body));\n};\n\n\nexport const listRanges = async (endpoint: string): Promise<IRange[]> => {\n    const resp = await fetchData(endpoint);\n    return check(Ranges.decode(resp.body));\n};\n\n\nexport const listConcreteBundles = async (endpoint: string): Promise<IConcreteBundle[]> => {\n    const resp = await fetchData(endpoint);\n    return check(ConcreteBundles.decode(resp.body));\n};\n\n\nexport const listUserConfigurableBundles = async (endpoint: string): Promise<IUserConfigurableBundle[]> => {\n    const resp = await fetchData(endpoint);\n    return check(UserConfigurableBundles.decode(resp.body));\n};\n\n\nconst _saveBundleGroupData = async (endpoint: string, group: IBundleGroup): Promise<IBundleGroup> => {\n    const req = (group.id)\n        ? request.patch(`${endpoint}${group.id}/`)\n        : request.post(endpoint);\n    const data = {...group};\n    delete data.image;\n    delete data.newImage;\n    delete data.clearImage;\n    const resp = await req\n        .set('Accept', 'application/json')\n        .set(CSRF_HEADER, getCSRFToken())\n        .send(data);\n    return check(BundleGroup.decode(resp.body));\n};\n\n\nconst _saveBundleGroupImage = async (endpoint: string, group: IBundleGroup): Promise<void> => {\n    if (!group.id) {\n        throw new Error(\"Can not save image for unsaved bundle group\");\n    }\n\n    if (!group.newImage && !group.clearImage) {\n        return Promise.resolve();\n    }\n\n    let req = request\n        .patch(`${endpoint}${group.id}/`)\n        .set('Accept', 'application/json')\n        .set(CSRF_HEADER, getCSRFToken());\n\n    if (group.newImage && !group.clearImage) {\n        req = req.attach('image', group.newImage, group.newImage.name);\n    } else if (group.clearImage) {\n        req = req.send({ 'image': null });\n    }\n\n    await req;\n};\n\n\nexport const saveBundleGroup = async (endpoint: string, data: IBundleGroup): Promise<IBundleGroup> => {\n    const group = await _saveBundleGroupData(endpoint, data);\n    data.id = group.id;  // Update bundle group ID if it was just created\n    await _saveBundleGroupImage(endpoint, data);\n    return group;\n};\n\n\nexport const deleteBundleGroup = async (endpoint: string, group: IBundleGroup): Promise<void> => {\n    if (!group.id) {\n        throw new Error('Can not delete unsaved bundle group');\n    }\n    await request\n        .delete(`${endpoint}${group.id}/`)\n        .set('Accept', 'application/json')\n        .set(CSRF_HEADER, getCSRFToken());\n};\n","import React from 'react';\n\n\nexport interface IProps {\n    searchText: string;\n    onChange: (searchText: string) => void;\n}\n\n\nexport interface IState {\n}\n\n\nclass BundleGroupSearchForm extends React.PureComponent<IProps, IState> {\n\n    render () {\n        const self = this;\n\n        const onChange = function(e: React.FormEvent<HTMLInputElement>) {\n            e.preventDefault();\n            self.props.onChange(e.currentTarget.value);\n        };\n\n        const onClear = function(e: React.FormEvent<HTMLButtonElement>) {\n            e.preventDefault();\n            self.props.onChange(\"\");\n        };\n\n        const onSubmit = function(e: React.FormEvent<HTMLFormElement>) {\n            e.preventDefault();\n        };\n\n        return (\n            <div className=\"card card-body bg-light\">\n                <form className=\"form-inline\" onSubmit={onSubmit}>\n                    <span className=\"form-group\">\n                        <label htmlFor=\"id_text\">{gettext(\"Search:\")}</label>\n                        <input\n                            className=\"form-control\"\n                            id=\"id_text\"\n                            value={this.props.searchText}\n                            onChange={onChange}\n                        />\n                    </span>\n                    {' '}\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={onClear}\n                    >\n                        {gettext(\"Clear Search\")}\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default BundleGroupSearchForm;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n    IBundleGroup,\n    IDRFSelectOptions,\n} from '../../../utils/models.interfaces';\n\n\ninterface IProps {\n    bundleTypeChoices: IDRFSelectOptions;\n    group: IBundleGroup | null;\n    isSaving: boolean;\n    errors: {\n        bundleType?: string[];\n        name?: string[];\n        headline?: string[];\n        description?: string[];\n        image?: string[];\n    };\n    bundleType: string;\n    name: string;\n    headline: string;\n    description: string;\n    image: File | null;\n    clearImage: boolean;\n\n    onEdit: (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void;\n    onSelectImage: (e: React.FormEvent<HTMLInputElement>) => void;\n    onClearImage: (e: React.FormEvent<HTMLInputElement>) => void;\n}\n\n\ninterface IState {\n}\n\n\nexport class BundleGroupMetaFields extends React.PureComponent<IProps, IState> {\n\n    private buildFormGroupClasses (field: keyof IProps['errors']) {\n        const fieldErrors = this.props.errors[field];\n        const classes: { [name: string]: boolean; } = {\n            'form-group': true,\n            'has-error': fieldErrors\n                ? (fieldErrors.length > 0)\n                : (false),\n        };\n        return classNames(classes);\n    }\n\n\n    private buildErrors (field: keyof IProps['errors']) {\n        return (this.props.errors[field] || []).map((errorMsg, i) => {\n            return (\n                <span key={i} className=\"help-block\">\n                    <i className=\"fas fa-exclamation\"></i>{' '}{errorMsg}\n                </span>\n            );\n        });\n    }\n\n\n    private buildCurrentImage () {\n        if (!this.props.group || !this.props.group.image) {\n            return null;\n        }\n        const pathParts = this.props.group.image.split('/');\n        const fileName = pathParts[pathParts.length - 1];\n        return (\n            <span>\n                {gettext(\"Currently:\")} <a target='_blank' href={this.props.group.image}>{fileName}</a>\n                {' '}\n                <input type=\"checkbox\"\n                       id=\"bundle-edit-form-clear-img\"\n                       checked={this.props.clearImage}\n                       onChange={this.props.onClearImage}\n                       disabled={this.props.isSaving} />\n                {' '}\n                <label htmlFor=\"bundle-edit-form-clear-img\">{gettext(\"Clear\")}</label>\n            </span>\n        );\n    }\n\n\n    render () {\n        const title = this.props.group\n            ? gettext(\"Edit Bundle Group\")\n            : gettext(\"Create Bundle Group\");\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{title}</h1>\n                <div className={this.buildFormGroupClasses('bundleType')}>\n                    <label htmlFor=\"id_bundleType\" className=\"control-label\">{gettext(\"Bundle Type\")}</label>\n                    <div>\n                        <select id=\"id_bundleType\"\n                                name=\"bundleType\"\n                                className=\"form-control\"\n                                value={this.props.bundleType}\n                                onChange={this.props.onEdit}\n                                disabled={this.props.isSaving}>\n                            {this.props.bundleTypeChoices.map((choice) => {\n                                return (\n                                    <option key={choice.value} value={choice.value}>\n                                        {choice.display_name}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                        {this.buildErrors('bundleType')}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses('name')}>\n                    <label htmlFor=\"id_name\" className=\"control-label\">{gettext(\"Name\")}</label>\n                    <div>\n                        <input id=\"id_name\"\n                               name=\"name\"\n                               maxLength={200}\n                               className=\"form-control\"\n                               value={this.props.name}\n                               onChange={this.props.onEdit}\n                               disabled={this.props.isSaving} />\n                        {this.buildErrors('name')}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses('headline')}>\n                    <label htmlFor=\"id_headline\" className=\"control-label\">{gettext(\"Headline\")}</label>\n                    <div>\n                        <textarea id=\"id_headline\"\n                               name=\"headline\"\n                               cols={40}\n                               rows={4}\n                               className=\"form-control\"\n                               value={this.props.headline}\n                               onChange={this.props.onEdit}\n                               disabled={this.props.isSaving}>\n                        </textarea>\n                        {this.buildErrors('headline')}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses('description')}>\n                    <label htmlFor=\"id_description\" className=\"control-label\">{gettext(\"Description\")}</label>\n                    <div>\n                        <textarea id=\"id_description\"\n                                  name=\"description\"\n                                  cols={40}\n                                  rows={4}\n                                  className=\"form-control\"\n                                  value={this.props.description}\n                                  onChange={this.props.onEdit}\n                                  disabled={this.props.isSaving}>\n                        </textarea>\n                        {this.buildErrors('description')}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses('image')}>\n                    <label htmlFor=\"id_image\" className=\"control-label\">{gettext(\"Image\")}</label>\n                    <div>\n                        {this.buildCurrentImage()}\n                        <input id=\"id_image\"\n                               type=\"file\"\n                               name=\"image\"\n                               className=\"form-control\"\n                               onChange={this.props.onSelectImage}\n                               disabled={this.props.isSaving} />\n                        {this.buildErrors('image')}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport {IProduct, SelectOption} from '../../../utils/models.interfaces';\n\ninterface IProps {\n    products: IProduct[];\n    isSaving: boolean;\n    errors: {\n        triggering_parents?: string[];\n        suggested_parents?: string[];\n    };\n    triggeringParents: number[];\n    suggestedParents: number[];\n    onSelectParent: (name: 'triggeringParents' | 'suggestedParents', opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined) => void;\n}\n\n\ninterface IState {\n}\n\n\nexport class ParentProductsEditForm extends React.PureComponent<IProps, IState> {\n\n    private getParentProductSelectOptions () {\n        return this.props.products\n            .filter((p) => {\n                return !p.is_child;\n            })\n            .sort((a, b) => {\n                return a.title.localeCompare(b.title);\n            })\n            .map((p) => {\n                const opt: SelectOption = {\n                    value: p.id,\n                    label: p.title,\n                };\n                return opt;\n            });\n    }\n\n\n    private buildFormGroupClasses (field: keyof IProps['errors'], extras: string[]) {\n        const fieldErrors = this.props.errors[field];\n        const classes: { [name: string]: boolean; } = {\n            'form-group': true,\n            'has-error': fieldErrors\n                ? (fieldErrors.length > 0)\n                : (false),\n        };\n        extras.forEach((className) => {\n            classes[className] = true;\n        });\n        return classNames(classes);\n    }\n\n\n    private buildErrors (field: keyof IProps['errors']) {\n        return (this.props.errors[field] || []).map((errorMsg, i) => {\n            return (\n                <span key={i} className=\"help-block\">\n                    <i className=\"fas fa-exclamation\"></i>{' '}{errorMsg}\n                </span>\n            );\n        });\n    }\n\n\n    render () {\n        const parentProductSelectOptions = this.getParentProductSelectOptions();\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{gettext(\"Relevant Products\")}</h1>\n                <p><em>{gettext(\"Select the parent and standalone products revelant to this bundle group.\")}</em></p>\n                <div className=\"row\">\n                    <div className={this.buildFormGroupClasses('triggering_parents', ['col-sm-6'])}>\n                        <label htmlFor=\"id_image\" className=\"control-label\">{gettext(\"Triggers\")}</label>\n                        <div>\n                            <Select name=\"triggeringParents\"\n                                    isMulti={true}\n                                    value={parentProductSelectOptions.filter((o) => this.props.triggeringParents.includes(o.value))}\n                                    onChange={this.props.onSelectParent.bind(this, 'triggeringParents')}\n                                    options={parentProductSelectOptions}\n                                    isDisabled={this.props.isSaving} />\n                            {this.buildErrors('triggering_parents')}\n                        </div>\n                    </div>\n                    <div className={this.buildFormGroupClasses('suggested_parents', ['col-sm-6'])}>\n                        <label htmlFor=\"id_image\" className=\"control-label\">{gettext(\"Suggestions\")}</label>\n                        <div>\n                            <Select name=\"suggestedProducts\"\n                                    isMulti={true}\n                                    value={parentProductSelectOptions.filter((o) => this.props.suggestedParents.includes(o.value))}\n                                    onChange={this.props.onSelectParent.bind(this, 'suggestedParents')}\n                                    options={parentProductSelectOptions}\n                                    isDisabled={this.props.isSaving} />\n                            {this.buildErrors('suggested_parents')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport {IProduct, IRange, SelectOption} from '../../../utils/models.interfaces';\n\n\ntype ILinkedRange = {\n    rangeID: number | null;\n    quantity: number;\n};\nexport type ILinkedRanges = {\n    [triggeringProductID: number]: ILinkedRange[];\n};\n\ninterface IProps {\n    ranges: IRange[];\n    isSaving: boolean;\n    triggeringParents: number[];\n    linkedRanges: ILinkedRanges;\n    getProduct: (productID: number) => IProduct;\n    onLinkedRangesChange: (trigger: IProduct, rangeIndex: number, opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined) => void;\n    onLinkedRangeQuantityChange: (trigger: IProduct, rangeIndex: number, opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined) => void;\n}\n\n\ninterface IState {\n}\n\n\nconst helpText = gettext(`User configurable bundles are bundles which link parent/standalone products to ranges of \\\nother products. Their intent is to represent a group of products related to the suggesting parent, rather than a \\\nspecific one-to-one mapping of product to product.`);\n\n\nexport class UserConfigurableBundles extends React.PureComponent<IProps, IState> {\n\n    private getRangeSelectOptions () {\n        const rangeOptions = this.props.ranges\n            .sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            })\n            .map((p) => {\n                const opt: SelectOption = {\n                    value: p.id,\n                    label: p.name,\n                };\n                return opt;\n            });\n        return rangeOptions;\n    }\n\n\n    private getQuantitySelectOptions () {\n        const quantityOptions: SelectOption[] = [];\n        for (let i = 1; i < 100; i++) {\n            quantityOptions.push({\n                value: i,\n                label: `${i}`,\n            });\n        }\n        return quantityOptions;\n    }\n\n\n    private buildBundleRows (triggerParent: IProduct) {\n        const suggestOptions = this.getRangeSelectOptions();\n        const quantityOptions = this.getQuantitySelectOptions();\n        const linkedRanges = this.props.linkedRanges[triggerParent.id] || [];\n        if (linkedRanges.length <= 0 || linkedRanges[linkedRanges.length - 1].rangeID !== null) {\n            linkedRanges.push({\n                rangeID: null,\n                quantity: 1,\n            });\n        }\n        return (\n            <table key={triggerParent.id} className=\"table bundle-group-edit__link-table\">\n                <tbody>\n                    {linkedRanges.map((range, i) => {\n                        return (\n                            <tr key={i}>\n                                <th>\n                                    <a href={triggerParent.dashboard_url} target=\"_blank\">{triggerParent.title}</a>\n                                </th>\n                                <td>\n                                    <Select isClearable={true}\n                                            value={suggestOptions.filter((o) => o.value === range.rangeID)}\n                                            options={suggestOptions}\n                                            onChange={this.props.onLinkedRangesChange.bind(this, triggerParent, i)}\n                                            isDisabled={this.props.isSaving} />\n                                </td>\n                                <td>\n                                    <Select value={quantityOptions.filter((o) => (range.rangeID !== null && o.value === range.quantity))}\n                                            options={quantityOptions}\n                                            onChange={this.props.onLinkedRangeQuantityChange.bind(this, triggerParent, i)}\n                                            isDisabled={this.props.isSaving || range.rangeID === null} />\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        );\n    }\n\n\n    private buildParentRows () {\n        if (this.props.triggeringParents.length <= 0) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <p><em>{gettext(\"Select at least one trigger product to begin linking ranges.\")}</em></p>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <h3><strong>{gettext(\"Trigger Parent\")}</strong></h3>\n                </div>\n                <div className=\"col-sm-4\">\n                    <h3><strong>{gettext(\"Suggested Range\")}</strong></h3>\n                </div>\n                <div className=\"col-sm-4\">\n                    <h3><strong>{gettext(\"Suggested Quantity\")}</strong></h3>\n                </div>\n                <div className=\"col-sm-12\">\n                    {this.props.triggeringParents.map((triggerParentID) => {\n                        const triggerParent = this.props.getProduct(triggerParentID);\n                        return this.buildBundleRows(triggerParent);\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n\n    render () {\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{gettext(\"Range Links (User Configurable Bundles)\")}</h1>\n                <p>\n                    <em>{helpText}</em>\n                </p>\n                {this.buildParentRows()}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport {IProduct, SelectOption} from '../../../utils/models.interfaces';\n\n\nexport type ILinkedProducts = {\n    [triggeringProductID: number]: number[];\n};\n\ninterface IProps {\n    products: IProduct[];\n    isSaving: boolean;\n    triggeringParents: number[];\n    suggestedParents: number[];\n    linkedProducts: ILinkedProducts;\n    getProduct: (productID: number) => IProduct;\n    onLinkedProductsChange: (trigger: IProduct, suggestParent: IProduct, opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined) => void;\n}\n\n\ninterface IState {\n}\n\n\nexport class ConcreteBundles extends React.PureComponent<IProps, IState> {\n\n    private getChildProductSelectOptions (parent: IProduct) {\n        return this.props.products\n            .filter((p) => {\n                return !p.is_parent && (p.id === parent.id || p.parent === parent.id);\n            })\n            .sort((a, b) => {\n                return a.title.localeCompare(b.title);\n            })\n            .map((p) => {\n                const opt: SelectOption = {\n                    value: p.id,\n                    label: p.title,\n                };\n                return opt;\n            });\n    }\n\n\n    private buildBundleRows (triggerParent: IProduct, suggestParent: IProduct) {\n        const triggerOptions = this.props.products\n            .filter((p) => {\n                return !p.is_parent && (p.id === triggerParent.id || p.parent === triggerParent.id);\n            })\n            .sort((a, b) => {\n                return a.title.localeCompare(b.title);\n            });\n        const suggestOptions = this.getChildProductSelectOptions(suggestParent);\n        return (\n            <table className=\"table bundle-group-edit__link-table\">\n                <tbody>\n                    {triggerOptions.map((trigger) => {\n                        const selectValue = (this.props.linkedProducts[trigger.id] || [])\n                            .filter((sid) => {\n                                const suggestion = this.props.getProduct(sid);\n                                return suggestion.id === suggestParent.id || suggestion.parent === suggestParent.id;\n                            });\n                        return (\n                            <tr key={trigger.id}>\n                                <th>\n                                    <a href={trigger.dashboard_url} target=\"_blank\">{trigger.title}</a>\n                                </th>\n                                <td>\n                                    <Select isMulti={true}\n                                            value={suggestOptions.filter((o) => selectValue.includes(o.value))}\n                                            options={suggestOptions}\n                                            onChange={this.props.onLinkedProductsChange.bind(this, trigger, suggestParent)}\n                                            isDisabled={this.props.isSaving} />\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        );\n    }\n\n\n    private buildParentRows () {\n        type ICombination = {\n            triggerParent: IProduct;\n            suggestParent: IProduct;\n        };\n        if (this.props.triggeringParents.length <= 0 || this.props.suggestedParents.length <= 0) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <p><em>{gettext(\"Select at least one trigger product and one suggested product to begin linking variants.\")}</em></p>\n                    </div>\n                </div>\n            );\n        }\n        const parentCombinations: { [key: string]: ICombination } = {};\n        const buildKey = function(triggerParent: number, suggestParent: number) {\n            return `${triggerParent}-${suggestParent}`;\n        };\n        this.props.triggeringParents.forEach((triggerID) => {\n            this.props.suggestedParents.forEach((suggestionID) => {\n                const key = buildKey(triggerID, suggestionID);\n                parentCombinations[key] = {\n                    triggerParent: this.props.getProduct(triggerID),\n                    suggestParent: this.props.getProduct(suggestionID),\n                };\n            });\n        });\n        return Object.values(parentCombinations).map((combination, i) => {\n            return (\n                <div key={i} className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <h3><strong>{combination.triggerParent.title}</strong> <em>{gettext(\"(Trigger Parent)\")}</em></h3>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <h3><strong>{combination.suggestParent.title}</strong> <em>{gettext(\"(Suggestion Parent)\")}</em></h3>\n                    </div>\n                    <div className=\"col-sm-12\">\n                        {this.buildBundleRows(combination.triggerParent, combination.suggestParent)}\n                    </div>\n                </div>\n            );\n        });\n    }\n\n\n    render () {\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{gettext(\"Product Links (Concrete Bundles)\")}</h1>\n                <p><em>\n                    {gettext('Concrete bundles are bundles which link products to other specific products. They can not be customized by the end-consumer.')}\n                </em></p>\n                {this.buildParentRows()}\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\n\ninterface IProps {\n    onCancel: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\n\ninterface IState {\n}\n\n\nexport class BundleGroupEditFormActions extends React.PureComponent<IProps, IState> {\n\n    render () {\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <div className=\"form-group\">\n                    <a className=\"btn btn-secondary\" onClick={this.props.onCancel}>{gettext(\"Cancel\")}</a>\n                    {' '}\n                    <button className=\"btn btn-primary\" type=\"submit\">{gettext(\"Save\")}</button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {\n    IBundleGroup,\n    IConcreteBundle,\n    IUserConfigurableBundle,\n    IProduct,\n    IRange,\n    IDRFSelectOptions,\n    SelectOption,\n} from '../../utils/models.interfaces';\nimport {BundleGroupMetaFields} from './elements/BundleGroupEditForm_MetaFields';\nimport {ParentProductsEditForm} from './elements/BundleGroupEditForm_ParentProducts';\nimport {ILinkedRanges, UserConfigurableBundles} from './elements/BundleGroupEditForm_UserConfigurableBundles';\nimport {ILinkedProducts, ConcreteBundles} from './elements/BundleGroupEditForm_ConcreteBundles';\nimport {BundleGroupEditFormActions} from './elements/BundleGroupEditForm_Actions';\n\nimport './BundleGroupEditForm.scss';\n\n\ninterface IProps {\n    bundleTypeChoices: IDRFSelectOptions;\n    group: IBundleGroup | null;\n    products: IProduct[];\n    ranges: IRange[];\n    isSaving: boolean;\n    errors: {\n        bundleType?: string[];\n        name?: string[];\n        headline?: string[];\n        description?: string[];\n        image?: string[];\n        triggering_parents?: string[];\n        suggested_parents?: string[];\n    };\n    onCancel: () => void;\n    onSave: (data: IBundleGroup) => void;\n}\n\n\ninterface IState {\n    bundleType: string;\n    name: string;\n    headline: string;\n    description: string;\n    image: File | null;\n    clearImage: boolean;\n    triggeringParents: number[];\n    suggestedParents: number[];\n    linkedRanges: ILinkedRanges;\n    linkedProducts: ILinkedProducts;\n}\n\n\nconst _isSelectOptionArray = (opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined): opts is ReadonlyArray<SelectOption> => {\n    return !!opts && (opts as ReadonlyArray<SelectOption>).length !== undefined;\n};\n\nconst _isSelectOption = (opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined): opts is SelectOption => {\n    return !!opts && !_isSelectOptionArray(opts);\n};\n\n\n\n\nclass BundleGroupEditForm extends React.PureComponent<IProps, IState> {\n\n    private productIdx: { [id: number]: IProduct };\n\n\n    constructor (props: IProps) {\n        super(props);\n\n        // Build linked ranges data set\n        const linkedRanges: IState['linkedRanges'] = {};\n        const configurableBundles = props.group ? props.group.user_configurable_bundles : [];\n        configurableBundles.forEach((bundle) => {\n            if (!linkedRanges[bundle.triggering_product]) {\n                linkedRanges[bundle.triggering_product] = [];\n            }\n            linkedRanges[bundle.triggering_product].push({\n                rangeID: bundle.suggested_range,\n                quantity: bundle.quantity,\n            });\n        });\n\n        // Build linked products data set\n        const linkedProducts: IState['linkedProducts'] = {};\n        const concreteBundles = props.group ? props.group.concrete_bundles : [];\n        concreteBundles.forEach((bundle) => {\n            if (!linkedProducts[bundle.triggering_product]) {\n                linkedProducts[bundle.triggering_product] = [];\n            }\n            linkedProducts[bundle.triggering_product] = linkedProducts[bundle.triggering_product]\n                .concat(bundle.suggested_products)\n                .filter((id, i, ids) => {\n                    return ids.indexOf(id) === i;\n                });\n        });\n\n        // Build initial state\n        const state: IState = {\n            bundleType: '',\n            name: '',\n            description: '',\n            headline: '',\n            image: null,\n            clearImage: false,\n            triggeringParents: [],\n            suggestedParents: [],\n            linkedRanges: linkedRanges,\n            linkedProducts: linkedProducts,\n        };\n        if (props.group) {\n            state.bundleType = props.group.bundle_type;\n            state.name = props.group.name;\n            state.description = props.group.description;\n            state.headline = props.group.headline;\n            state.triggeringParents = props.group.triggering_parents;\n            state.suggestedParents = props.group.suggested_parents;\n        } else if (props.bundleTypeChoices.length > 0) {\n            state.bundleType = props.bundleTypeChoices[0].value;\n        }\n        this.state = state;\n        this.productIdx = {};\n        this.fillProductIdx(props.products);\n    }\n\n\n    private readonly onEdit = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n        const name = e.currentTarget.name as keyof IState;\n        const value = e.currentTarget.value;\n        this.setState((state) => {\n            return {...state,  [name]: value, };\n        });\n    }\n\n\n    private readonly onSelectImage = (e: React.FormEvent<HTMLInputElement>) => {\n        if (!e.currentTarget.files) {\n            return;\n        }\n        const file = e.currentTarget.files[0];\n        this.setState({\n            image: file,\n        });\n    }\n\n\n    private readonly onSelectParent = (name: 'triggeringParents' | 'suggestedParents', opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined) => {\n        let options: ReadonlyArray<SelectOption>;\n        if (!opts) {\n            options = [];\n        } else if ((opts as ReadonlyArray<SelectOption>).length === undefined) {\n            options = [opts as SelectOption];\n        } else {\n            options = opts as ReadonlyArray<SelectOption>;\n        }\n        this.setState((state) => {\n            return {...state, [name]: options.map((o) => { return o.value; }), };\n        });\n    }\n\n\n    private readonly onLinkedRangesChange = (trigger: IProduct, rangeIndex: number, opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined) => {\n        let option: SelectOption | null = null;\n        if (_isSelectOption(opts)) {\n            option = opts;\n        } else if (_isSelectOptionArray(opts)) {\n            throw new Error('Can not link multiple ranges to a single trigger parent');\n        }\n        this.setState((state) => {\n            const linkedRanges = {\n                ...state.linkedRanges,\n            };\n            if (option) {\n                if (!linkedRanges[trigger.id]) {\n                    linkedRanges[trigger.id] = [];\n                }\n                linkedRanges[trigger.id][rangeIndex] = {\n                    ...(linkedRanges[trigger.id][rangeIndex] || {}),\n                    rangeID: option.value,\n                    quantity: 1,\n                };\n            } else {\n                delete linkedRanges[trigger.id][rangeIndex];\n                linkedRanges[trigger.id] = linkedRanges[trigger.id].filter((r) => !!r);\n                if (linkedRanges[trigger.id].length <= 0) {\n                    delete linkedRanges[trigger.id];\n                }\n            }\n            return {...state, linkedRanges: linkedRanges, };\n        });\n    }\n\n\n    private readonly onLinkedRangesQuantityChange = (\n        trigger: IProduct,\n        rangeIndex: number,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined\n    ) => {\n        let option: SelectOption = { value: 1, label: '1', };\n        if (_isSelectOption(opts)) {\n            option = opts;\n        } else if (_isSelectOptionArray(opts)) {\n            throw new Error('Can not link multiple quantities to a single range parent');\n        }\n        this.setState((state) => {\n            const linkedRanges = {\n                ...state.linkedRanges,\n            };\n            if (linkedRanges[trigger.id] && linkedRanges[trigger.id][rangeIndex]) {\n                linkedRanges[trigger.id][rangeIndex] = {\n                    ...(linkedRanges[trigger.id][rangeIndex]),\n                    quantity: option.value,\n                };\n            }\n            return {...state, linkedRanges: linkedRanges, };\n        });\n    }\n\n\n    private readonly onLinkedProductsChange = (\n        trigger: IProduct,\n        suggestParent: IProduct,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined\n    ) => {\n        let options: ReadonlyArray<SelectOption>;\n        if (!opts) {\n            options = [];\n        } else if (_isSelectOption(opts)) {\n            options = [opts];\n        } else {\n            options = opts;\n        }\n        const ids = options.map((o) => { return o.value; });\n        this.setState((state) => {\n            const oldIDs = (state.linkedProducts[trigger.id] || [])\n                .filter((sid) => {\n                    const suggestion = this.getProduct(sid);\n                    return suggestion.id !== suggestParent.id && suggestion.parent !== suggestParent.id;\n                });\n            const newIDs = oldIDs\n                .concat(ids)\n                .filter((id, i, _ids) => {\n                    return _ids.indexOf(id) === i;\n                });\n            const linkedProducts = {...state.linkedProducts, [trigger.id]: newIDs, };\n            return {...state, linkedProducts: linkedProducts, };\n        });\n    }\n\n\n    private readonly onCancel = (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        this.props.onCancel();\n    }\n\n\n    private readonly onSave = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        const data: IBundleGroup = {\n            id: this.props.group ? this.props.group.id : null,\n            bundle_type: this.state.bundleType,\n            name: this.state.name,\n            description: this.state.description,\n            headline: this.state.headline,\n            image: this.props.group ? this.props.group.image : '',\n            newImage: this.state.clearImage ? null : this.state.image,\n            clearImage: this.state.clearImage,\n            triggering_parents: this.state.triggeringParents,\n            suggested_parents: this.state.suggestedParents,\n            concrete_bundles: [],\n            user_configurable_bundles: [],\n        };\n\n        Object.keys(this.state.linkedRanges).forEach((tID) => {\n            const triggerID = parseInt(tID, 10);\n            const tProduct = this.getProduct(triggerID);\n            if (data.triggering_parents.indexOf(tProduct.id) === -1 && (!tProduct.parent || data.triggering_parents.indexOf(tProduct.parent) === -1)) {\n                return;\n            }\n            const linkedRanges = this.state.linkedRanges[triggerID];\n            linkedRanges.forEach(({rangeID, quantity}) => {\n                if (!rangeID || !quantity) {\n                    return;\n                }\n                let preExistingBundle: IUserConfigurableBundle | undefined = undefined;\n                if (this.props.group) {\n                    preExistingBundle = this.props.group.user_configurable_bundles.find((b) => {\n                        return b.triggering_product === triggerID && b.suggested_range === rangeID;\n                    });\n                }\n                data.user_configurable_bundles.push({\n                    id: preExistingBundle ? preExistingBundle.id : null,\n                    triggering_product: triggerID,\n                    suggested_range: rangeID,\n                    quantity: quantity,\n                });\n            });\n        });\n\n        Object.keys(this.state.linkedProducts).forEach((tID) => {\n            const triggerID = parseInt(tID, 10);\n            const tProduct = this.getProduct(triggerID);\n            if (data.triggering_parents.indexOf(tProduct.id) === -1 && (!tProduct.parent || data.triggering_parents.indexOf(tProduct.parent) === -1)) {\n                return;\n            }\n\n            let preExistingBundle: IConcreteBundle | undefined = undefined;\n            if (this.props.group) {\n                preExistingBundle = this.props.group.concrete_bundles.find((b) => {\n                    return b.triggering_product === triggerID;\n                });\n            }\n\n            const suggestionIDs = this.state.linkedProducts[triggerID]\n                .filter((sID) => {\n                    const sProduct = this.getProduct(sID);\n                    return data.suggested_parents.indexOf(sProduct.id) !== -1 || !sProduct.parent || data.suggested_parents.indexOf(sProduct.parent) !== -1;\n                });\n\n            if (suggestionIDs.length <= 0) {\n                return;\n            }\n\n            data.concrete_bundles.push({\n                id: preExistingBundle ? preExistingBundle.id : null,\n                triggering_product: triggerID,\n                suggested_products: suggestionIDs\n            });\n        });\n\n        this.props.onSave(data);\n    }\n\n\n    private readonly onClearImage = (e: React.FormEvent<HTMLInputElement>) => {\n        this.setState({\n            clearImage: e.currentTarget.checked,\n        });\n    }\n\n\n    private readonly getProduct = (productID: number) => {\n        return this.productIdx[productID];\n    }\n\n\n    componentWillReceiveProps (nextProps: IProps) {\n        this.fillProductIdx(nextProps.products);\n    }\n\n\n    private fillProductIdx (products: IProduct[]) {\n        this.productIdx = {};\n        products.forEach((p) => {\n            this.productIdx[p.id] = p;\n        });\n    }\n\n\n    render () {\n        return (\n            <form className=\"row bundle-group-edit\" onSubmit={this.onSave}>\n                <BundleGroupMetaFields\n                    bundleTypeChoices={this.props.bundleTypeChoices}\n                    group={this.props.group}\n                    isSaving={this.props.isSaving}\n                    errors={this.props.errors}\n                    bundleType={this.state.bundleType}\n                    name={this.state.name}\n                    headline={this.state.headline}\n                    description={this.state.description}\n                    image={this.state.image}\n                    clearImage={this.state.clearImage}\n                    onEdit={this.onEdit}\n                    onSelectImage={this.onSelectImage}\n                    onClearImage={this.onClearImage}\n                />\n                <ParentProductsEditForm\n                    products={this.props.products}\n                    isSaving={this.props.isSaving}\n                    errors={this.props.errors}\n                    triggeringParents={this.state.triggeringParents}\n                    suggestedParents={this.state.suggestedParents}\n                    onSelectParent={this.onSelectParent}\n                />\n                <UserConfigurableBundles\n                    ranges={this.props.ranges}\n                    isSaving={this.props.isSaving}\n                    triggeringParents={this.state.triggeringParents}\n                    linkedRanges={this.state.linkedRanges}\n                    getProduct={this.getProduct}\n                    onLinkedRangesChange={this.onLinkedRangesChange}\n                    onLinkedRangeQuantityChange={this.onLinkedRangesQuantityChange}\n                />\n                <ConcreteBundles\n                    products={this.props.products}\n                    isSaving={this.props.isSaving}\n                    triggeringParents={this.state.triggeringParents}\n                    suggestedParents={this.state.suggestedParents}\n                    linkedProducts={this.state.linkedProducts}\n                    getProduct={this.getProduct}\n                    onLinkedProductsChange={this.onLinkedProductsChange}\n                />\n                <BundleGroupEditFormActions onCancel={this.onCancel} />\n            </form>\n        );\n    }\n}\n\nexport default BundleGroupEditForm;\n","import React from 'react';\nimport {IBundleGroup, IProduct, IRange, IDRFSelectOptions} from '../../utils/models.interfaces';\n\n\nexport interface IProps {\n    bundleTypeChoices: IDRFSelectOptions;\n    group: IBundleGroup;\n    products: IProduct[];\n    ranges: IRange[];\n    onEdit: (group: IBundleGroup) => void;\n    onDelete: (group: IBundleGroup) => void;\n}\n\n\nexport interface IState {\n}\n\n\nclass BundleGroupTableRow extends React.PureComponent<IProps, IState> {\n\n    private buildGroupActions () {\n        const self = this;\n        const onEdit = function(e: React.MouseEvent<HTMLAnchorElement>) {\n            e.preventDefault();\n            self.props.onEdit(self.props.group);\n        };\n        const onDelete = function(e: React.MouseEvent<HTMLAnchorElement>) {\n            e.preventDefault();\n            const msgFormat = gettext(\"Are you sure you want to delete this bundle group (%(name)s) and all its associated bundles?\");\n            const data = {\n                name: self.props.group.name,\n            };\n            const msg = interpolate(msgFormat, data, true);\n            if (confirm(msg)) {\n                self.props.onDelete(self.props.group);\n            }\n        };\n        return (\n            <div className=\"btn-toolbar\">\n                <div className=\"dropdown\">\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {gettext(\"Actions\")}{' '}<span className=\"caret\"></span>\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-right\">\n                        <a className=\"dropdown-item\" onClick={onEdit}>{gettext(\"Edit\")}</a>\n                        <a className=\"dropdown-item\" onClick={onDelete}>{gettext(\"Delete\")}</a>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n\n    private buildProductList (productIDs: number[]) {\n        const products = this.props.products.filter((p) => {\n            return productIDs.indexOf(p.id) !== -1;\n        });\n        return (\n            <ul>\n                {products.map((p) => {\n                    return (\n                        <li key={p.id}>\n                            <a href={p.dashboard_url}>{p.title}</a>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n\n\n    private buildRangeList () {\n        const rangeIDs = this.props.group.user_configurable_bundles.map((bundle) => bundle.suggested_range);\n        const ranges = this.props.ranges.filter((r) => {\n            return rangeIDs.includes(r.id);\n        });\n        return (\n            <ul>\n                {ranges.map((r) => {\n                    return (\n                        <li key={r.id}>\n                            <a href={r.dashboard_url}>{r.name}</a>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n\n\n    render () {\n        const self = this;\n        const bundleType = this.props.bundleTypeChoices.find((choice) => {\n            return choice.value === self.props.group.bundle_type;\n        });\n        let suggestedProducts: JSX.Element | null = null;\n        let suggestedRanges: JSX.Element | null = null;\n        if (this.props.group.suggested_parents) {\n            suggestedProducts = (\n                <>\n                    <em>{gettext(\"Products:\")}</em>\n                    {this.buildProductList(this.props.group.suggested_parents)}\n                </>\n            );\n        }\n        if (this.props.group.user_configurable_bundles.length > 0) {\n            suggestedRanges = (\n                <>\n                    <em>{gettext(\"Ranges:\")}</em>\n                    {this.buildRangeList()}\n                </>\n            );\n        }\n        return (\n            <tr key={`${this.props.group.id}`}>\n                <td>{this.props.group.name}</td>\n                <td>{bundleType ? bundleType.display_name : ''}</td>\n                <td><img src={this.props.group.image || undefined} width={100} /></td>\n                <td>\n                    {this.buildProductList(this.props.group.triggering_parents)}\n                </td>\n                <td>\n                    {suggestedProducts}\n                    {suggestedRanges}\n                </td>\n                <td>{this.buildGroupActions()}</td>\n            </tr>\n        );\n    }\n}\n\nexport default BundleGroupTableRow;\n","import React from 'react';\nimport lunr from 'lunr';\nimport Modal from 'react-modal';\nimport {\n    getBundleTypeChoices,\n    listBundleGroups,\n    listProducts,\n    listRanges,\n    saveBundleGroup,\n    deleteBundleGroup,\n} from '../utils/api';\nimport {\n    IBundleGroup,\n    IProduct,\n    IRange,\n    IDRFSelectOptions,\n} from '../utils/models.interfaces';\nimport BundleGroupSearchForm from './molecules/BundleGroupSearchForm';\nimport BundleGroupEditForm from './molecules/BundleGroupEditForm';\nimport BundleGroupTableRow from './molecules/BundleGroupTableRow';\n\nimport './BundleGroupTable.scss';\n\n\nModal.setAppElement('#bundlegroup-table');\n\nconst modalStyles = {\n    overlay: {\n        backgroundColor: 'rgba(51, 51, 51, 0.8)',\n        zIndex: 2000,\n    },\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        minWidth: '800px',\n        maxWidth: '1000px',\n        maxHeight: '90%',\n    },\n};\n\n\nexport interface IProps {\n    bundleGroupURL: string;\n    concreteBundleURL: string;\n    concreteBundleProductChoiceURL: string;\n    userConfigurableBundleURL: string;\n    userConfigurableBundleRangeChoiceURL: string;\n}\n\n\nexport interface IState {\n    bundleTypeChoices: IDRFSelectOptions;\n    groups: IBundleGroup[];\n    products: IProduct[];\n    ranges: IRange[];\n    searchText: string;\n    selectedGroup: number | null;\n    editModalOpen: boolean;\n    isSaving: boolean;\n    isLoading: boolean;\n    formErrors: {\n        name?: string[];\n        description?: string[];\n        image?: string[];\n        triggering_parents?: string[];\n        suggested_parents?: string[];\n    };\n}\n\n\nclass BundleGroupTable extends React.Component<IProps, IState> {\n    idx: lunr.Index | undefined;\n\n    state: IState = {\n        bundleTypeChoices: [],\n        groups: [],\n        products: [],\n        ranges: [],\n        searchText: '',\n        selectedGroup: null,\n        editModalOpen: false,\n        isSaving: false,\n        isLoading: true,\n        formErrors: {},\n    };\n\n\n    private readonly onSearchTextChange = (text: string) => {\n        this.setState({\n            searchText: text,\n        });\n    }\n\n\n    private readonly onCreate = (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        this.openCreateModal();\n    }\n\n\n    private readonly onOpenEditModal = (group: IBundleGroup) => {\n        this.setState({\n            selectedGroup: group.id,\n            formErrors: {},\n            editModalOpen: true,\n        });\n    }\n\n\n    private readonly onCloseModal = () => {\n        this.setState({\n            selectedGroup: null,\n            formErrors: {},\n            editModalOpen: false,\n        });\n    }\n\n\n    private readonly onSaveBundleGroup = async (data: IBundleGroup) => {\n        this.setState({ isSaving: true, });\n        try {\n            await saveBundleGroup(this.props.bundleGroupURL, data);\n            await this.loadData();\n            this.setState({ isSaving: false, });\n            this.onCloseModal();\n        } catch (err) {\n            this.setState({\n                isSaving: false,\n                formErrors: err.response.body,\n            });\n        }\n    }\n\n\n    private readonly onDeleteBundleGroup = async (data: IBundleGroup) => {\n        await deleteBundleGroup(this.props.bundleGroupURL, data);\n        return this.loadData();\n    }\n\n\n    componentDidMount () {\n        this.loadData();\n    }\n\n\n    private async loadData () {\n        this.setState({ isLoading: true, });\n        const loading = Promise.all([\n            getBundleTypeChoices(this.props.bundleGroupURL),\n            listBundleGroups(this.props.bundleGroupURL),\n            listProducts(this.props.concreteBundleProductChoiceURL),\n            listRanges(this.props.userConfigurableBundleRangeChoiceURL),\n        ]);\n        const [choices, groups, products, ranges] = await loading;\n        this.setBundleTypeChoices(choices);\n        this.setGroups(groups);\n        this.setProducts(products);\n        this.setRanges(ranges);\n        this.setState({ isLoading: false, });\n    }\n\n\n    private openCreateModal () {\n        this.setState({\n            selectedGroup: null,\n            formErrors: {},\n            editModalOpen: true,\n        });\n    }\n\n\n    private setGroups (groups: IBundleGroup[]) {\n        // Update the search index\n        this.idx = lunr(function() {\n            const builder = this;\n            builder.ref('id');\n            builder.field('name');\n            builder.field('description');\n            groups.forEach((g) => {\n                builder.add(g);\n            });\n        });\n        // Update the component state\n        this.setState({\n            groups: groups,\n        });\n    }\n\n\n    private setBundleTypeChoices (choices: IDRFSelectOptions) {\n        this.setState({\n            bundleTypeChoices: choices,\n        });\n    }\n\n\n    private setProducts (products: IProduct[]) {\n        this.setState({\n            products: products,\n        });\n    }\n\n\n    private setRanges (ranges: IRange[]) {\n        this.setState({\n            ranges: ranges,\n        });\n    }\n\n\n    private getSearchResults (searchText: string) {\n        if (!this.idx) {\n            return [];\n        }\n        const results = this.idx.search(searchText);\n        return results\n            .map((result) => {\n                const gid = parseInt(result.ref, 10);\n                return this.state.groups.find((g) => {\n                    return g.id === gid;\n                });\n            })\n            .filter((group): group is IBundleGroup => {\n                return !!group;\n            });\n    }\n\n\n    private buildGroupRows () {\n        const searchText = this.state.searchText.trim();\n        const results = searchText\n            ? this.getSearchResults(searchText)\n            : this.state.groups;\n        const numTableColumns = 6;\n        if (this.state.isLoading) {\n            return (\n                <tr>\n                    <td colSpan={numTableColumns}><em>{gettext('Loading…')}</em></td>\n                </tr>\n            );\n        }\n        if (results.length <= 0) {\n            const msg = searchText\n                ? interpolate(gettext('No bundle groups found for search: %(searchText)s'), { searchText: searchText, }, true)\n                : gettext('No bundle groups found.');\n            return (\n                <tr>\n                    <td colSpan={numTableColumns}>{msg}</td>\n                </tr>\n            );\n        }\n        return results.map((group) => {\n            return (\n                <BundleGroupTableRow key={`${group.id}`}\n                                     bundleTypeChoices={this.state.bundleTypeChoices}\n                                     group={group}\n                                     products={this.state.products}\n                                     ranges={this.state.ranges}\n                                     onEdit={this.onOpenEditModal}\n                                     onDelete={this.onDeleteBundleGroup} />\n            );\n        });\n    }\n\n\n    private buildEditModal () {\n        const group = this.state.groups.find((g) => {\n            return g.id === this.state.selectedGroup;\n        });\n        return (\n            <Modal contentLabel={gettext(\"Edit Bundle Group\")}\n                   style={modalStyles}\n                   isOpen={this.state.editModalOpen}>\n                <BundleGroupEditForm bundleTypeChoices={this.state.bundleTypeChoices}\n                                     group={group || null}\n                                     products={this.state.products}\n                                     ranges={this.state.ranges}\n                                     isSaving={this.state.isSaving}\n                                     errors={this.state.formErrors}\n                                     onCancel={this.onCloseModal}\n                                     onSave={this.onSaveBundleGroup} />\n            </Modal>\n        );\n    }\n\n\n    render () {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <a className=\"btn btn-primary float-right\" onClick={this.onCreate}>\n                        <i className=\"fas fa-plus-circle\"></i>{' '}{gettext(\"Create new bundle group\")}\n                    </a>\n                    <h1>{gettext(\"Bundle Groups\")}</h1>\n                </div>\n                <div className=\"table-header\">\n                    <h3><i className=\"fas fa-search\"></i>{gettext(\"Search Bundle Groups\")}</h3>\n                </div>\n                <BundleGroupSearchForm searchText={this.state.searchText}\n                                       onChange={this.onSearchTextChange} />\n\n                <table className=\"table table-striped table-bordered\">\n                    <tbody>\n                        <tr>\n                            <th>{gettext(\"Name\")}</th>\n                            <th>{gettext(\"Type\")}</th>\n                            <th>{gettext(\"Image\")}</th>\n                            <th>{gettext(\"Triggers\")}</th>\n                            <th>{gettext(\"Suggestions\")}</th>\n                            <th>{gettext(\"Actions\")}</th>\n                        </tr>\n                        {this.buildGroupRows()}\n                    </tbody>\n                </table>\n\n                {this.buildEditModal()}\n            </div>\n        );\n    }\n}\n\nexport default BundleGroupTable;\n","// Load polyfills needed for IE11 and other old browsers\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport {render} from 'react-dom';\nimport BundleGroupTable from './bundles/BundleGroupTable';\n\n\ntype INamedInterpolationData = { [key: string]: string; };\ntype IPositionalInterpolationData = string[];\ntype IInterpolateFn =\n    ((fmt: string, obj: IPositionalInterpolationData, named?: false) => string) &\n    ((fmt: string, obj: INamedInterpolationData, named: true) => string);\ninterface IDjango {\n    readonly gettext: (msgid: string) => string;\n    readonly ngettext: (singular: string, plural: string, count: number) => string;\n    readonly gettext_noop: (msgid: string) => string;\n    readonly pgettext: (context: string, msgid: string) => string;\n    readonly npgettext: (context: string, singular: string, plural: string, count: number) => string;\n    readonly interpolate: IInterpolateFn;\n\n    readonly pluralidx: (count: number) => number;\n\n    readonly jsi18n_initialized: boolean;\n    readonly catalog: {\n        [msgid: string]: string;\n    };\n    readonly formats: {\n        [msgid: string]: string | string[];\n    };\n    readonly get_format: (formatType: string) => string | string[];\n}\n\n\ndeclare global {\n    // Django i18n functions\n    const django: IDjango;\n    const pluralidx: IDjango['pluralidx'];\n    const gettext: IDjango['gettext'];\n    const ngettext: IDjango['ngettext'];\n    const gettext_noop: IDjango['gettext_noop'];\n    const pgettext: IDjango['pgettext'];\n    const npgettext: IDjango['npgettext'];\n    const interpolate: IDjango['interpolate'];\n    const get_format: IDjango['get_format'];\n}\n\n\nconst main = function() {\n    const elem = document.querySelector('#bundlegroup-table') as HTMLDivElement;\n    const bundleGroupURL = elem.dataset.bundlegroupApi || '';\n    const concreteBundleURL = elem.dataset.concretebundleApi || '';\n    const concreteBundleProductChoiceURL = elem.dataset.concretebundleProductChoiceApi || '';\n    const userConfigurableBundleURL = elem.dataset.userconfigurablebundleApi || '';\n    const userConfigurableBundleRangeChoiceURL = elem.dataset.userconfigurablebundleRangeChoiceApi || '';\n    const component = (\n        <BundleGroupTable bundleGroupURL={bundleGroupURL}\n                          concreteBundleURL={concreteBundleURL}\n                          concreteBundleProductChoiceURL={concreteBundleProductChoiceURL}\n                          userConfigurableBundleURL={userConfigurableBundleURL}\n                          userConfigurableBundleRangeChoiceURL={userConfigurableBundleRangeChoiceURL} />\n    );\n    render(component, elem);\n};\n\nmain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t678: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdjango_oscar_bundles\"] = self[\"webpackChunkdjango_oscar_bundles\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], function() { return __webpack_require__(2031); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}
