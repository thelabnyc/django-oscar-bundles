{"version":3,"file":"bundles.js","mappings":"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","sources":["webpack://django-oscar-bundles/webpack/runtime/chunk loaded","webpack://django-oscar-bundles/webpack/runtime/create fake namespace object","webpack://django-oscar-bundles/./src/utils/models.ts","webpack://django-oscar-bundles/./src/utils/api.ts","webpack://django-oscar-bundles/./src/bundles/molecules/BundleGroupSearchForm.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_MetaFields.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_ParentProducts.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_UserConfigurableBundles.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_ConcreteBundles.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/elements/BundleGroupEditForm_Actions.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/BundleGroupEditForm.tsx","webpack://django-oscar-bundles/./src/bundles/molecules/BundleGroupTableRow.tsx","webpack://django-oscar-bundles/./src/bundles/BundleGroupTable.tsx","webpack://django-oscar-bundles/./src/bundles.tsx","webpack://django-oscar-bundles/webpack/bootstrap","webpack://django-oscar-bundles/webpack/runtime/compat get default export","webpack://django-oscar-bundles/webpack/runtime/define property getters","webpack://django-oscar-bundles/webpack/runtime/global","webpack://django-oscar-bundles/webpack/runtime/hasOwnProperty shorthand","webpack://django-oscar-bundles/webpack/runtime/make namespace object","webpack://django-oscar-bundles/webpack/runtime/jsonp chunk loading","webpack://django-oscar-bundles/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import * as t from \"io-ts\";\nimport { failure } from \"io-ts/lib/PathReporter\";\nimport { Either, isLeft } from \"fp-ts/lib/Either\";\n\nexport const check = <T>(result: Either<t.Errors, T>): T => {\n    if (isLeft(result)) {\n        throw new Error(failure(result.left).join(\"\\n\"));\n    }\n    return result.right;\n};\n\nconst nullable = <RT extends t.Mixed>(type: RT) => {\n    return t.union([t.null, type]);\n};\n\nexport const optional = <RT extends t.Mixed>(type: RT) => {\n    return t.union([t.undefined, type]);\n};\n\nclass FileType extends t.Type<File> {\n    readonly _tag = \"NumberType\" as const;\n    constructor() {\n        super(\n            \"number\",\n            (f): f is File => {\n                return f instanceof File;\n            },\n            (u, c) => {\n                return this.is(u) ? t.success(u) : t.failure(u, c);\n            },\n            t.identity,\n        );\n    }\n}\nconst file = new FileType();\n\nexport const DRFSelectOption = t.interface({\n    value: t.string,\n    display_name: t.string,\n});\nexport const DRFSelectOptions = t.readonlyArray(DRFSelectOption);\n\nexport const BaseField = <T extends string>(fieldType: t.LiteralC<T>) => {\n    return t.interface({\n        type: fieldType,\n        required: t.boolean,\n        read_only: t.boolean,\n        label: t.string,\n        help_text: optional(t.string),\n    });\n};\n\nexport const IntegerField = BaseField(t.literal(\"integer\"));\n\nexport const BooleanField = BaseField(t.literal(\"boolean\"));\n\nexport const DatetimeField = BaseField(t.literal(\"datetime\"));\n\nexport const StringField = t.intersection([\n    BaseField(t.literal(\"string\")),\n    t.interface({\n        max_length: optional(t.number),\n    }),\n]);\n\nexport const ChoiceField = t.intersection([\n    BaseField(t.literal(\"choice\")),\n    t.interface({\n        choices: DRFSelectOptions,\n    }),\n]);\n\nexport const Field = t.union([\n    IntegerField,\n    BooleanField,\n    DatetimeField,\n    StringField,\n    ChoiceField,\n    t.unknown,\n]);\n\nexport const HTTPMethod = t.union([\n    t.literal(\"GET\"),\n    t.literal(\"HEAD\"),\n    t.literal(\"OPTIONS\"),\n    t.literal(\"POST\"),\n    t.literal(\"PUT\"),\n    t.literal(\"PATCH\"),\n    t.literal(\"DELETE\"),\n]);\n\nexport const DRFOptionsResponse = t.interface({\n    name: t.string,\n    description: t.string,\n    renders: t.readonlyArray(t.string),\n    parses: t.readonlyArray(t.string),\n    actions: t.interface({\n        GET: optional(t.record(t.string, Field)),\n        HEAD: optional(t.record(t.string, Field)),\n        OPTIONS: optional(t.record(t.string, Field)),\n        POST: optional(t.record(t.string, Field)),\n        PUT: optional(t.record(t.string, Field)),\n        PATCH: optional(t.record(t.string, Field)),\n        DELETE: optional(t.record(t.string, Field)),\n    }),\n});\n\nexport const Product = t.interface({\n    id: t.number,\n    dashboard_url: t.string,\n    product_class: nullable(\n        t.interface({\n            id: t.number,\n            name: t.string,\n        }),\n    ),\n    title: t.string,\n    slug: t.string,\n    is_parent: t.boolean,\n    is_child: t.boolean,\n    parent: nullable(t.number),\n    children: t.array(t.number),\n});\nexport const Products = t.array(Product);\n\nexport const Range = t.interface({\n    id: t.number,\n    dashboard_url: t.string,\n    name: t.string,\n    slug: t.string,\n    description: t.string,\n});\nexport const Ranges = t.array(Range);\n\nexport const ConcreteBundle = t.interface({\n    id: nullable(t.number),\n    triggering_product: t.number,\n    suggested_products: t.array(t.number),\n});\nexport const ConcreteBundles = t.array(ConcreteBundle);\n\nexport const UserConfigurableBundle = t.interface({\n    id: nullable(t.number),\n    triggering_product: t.number,\n    suggested_range: t.number,\n    quantity: t.number,\n});\nexport const UserConfigurableBundles = t.array(UserConfigurableBundle);\n\nexport const BundleGroup = t.interface({\n    id: nullable(t.number),\n    bundle_type: t.string,\n    name: t.string,\n    description: t.string,\n    is_active: optional(nullable(t.boolean)),\n    headline: t.string,\n    image: optional(nullable(t.string)),\n    newImage: optional(nullable(file)),\n    clearImage: optional(t.boolean),\n    triggering_parents: t.array(t.number),\n    suggested_parents: t.array(t.number),\n    concrete_bundles: t.array(ConcreteBundle),\n    user_configurable_bundles: t.array(UserConfigurableBundle),\n});\nexport const BundleGroups = t.array(BundleGroup);\n","import cookies from \"js-cookie\";\nimport {\n    IDRFSelectOption,\n    IBundleGroup,\n    IProduct,\n    IRange,\n    IConcreteBundle,\n    IUserConfigurableBundle,\n} from \"./models.interfaces\";\nimport {\n    check,\n    ChoiceField,\n    DRFOptionsResponse,\n    BundleGroup,\n    BundleGroups,\n    Products,\n    Ranges,\n    ConcreteBundles,\n    UserConfigurableBundles,\n} from \"./models\";\n\nconst CSRF_HEADER = \"X-CSRFToken\";\n\nconst getCSRFToken = function (): string {\n    return cookies.get(\"csrftoken\") || \"\";\n};\n\nconst fetchData = async (endpoint: string) => {\n    return fetch(endpoint, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n        },\n    });\n};\n\nexport const getBundleTypeChoices = async (\n    endpoint: string,\n): Promise<ReadonlyArray<IDRFSelectOption>> => {\n    const resp = await fetch(endpoint, {\n        method: \"OPTIONS\",\n        headers: {\n            Accept: \"application/json\",\n        },\n    });\n    const body = check(DRFOptionsResponse.decode(await resp.json()));\n    if (!body.actions.POST) {\n        return [];\n    }\n    const field = check(ChoiceField.decode(body.actions.POST.bundle_type));\n    const choices = field.choices;\n    return choices;\n};\n\nexport const listBundleGroups = async (\n    endpoint: string,\n): Promise<IBundleGroup[]> => {\n    const resp = await fetchData(endpoint);\n    return check(BundleGroups.decode(await resp.json()));\n};\n\nexport const listProducts = async (endpoint: string): Promise<IProduct[]> => {\n    const resp = await fetchData(endpoint);\n    return check(Products.decode(await resp.json()));\n};\n\nexport const listRanges = async (endpoint: string): Promise<IRange[]> => {\n    const resp = await fetchData(endpoint);\n    return check(Ranges.decode(await resp.json()));\n};\n\nexport const listConcreteBundles = async (\n    endpoint: string,\n): Promise<IConcreteBundle[]> => {\n    const resp = await fetchData(endpoint);\n    return check(ConcreteBundles.decode(await resp.json()));\n};\n\nexport const listUserConfigurableBundles = async (\n    endpoint: string,\n): Promise<IUserConfigurableBundle[]> => {\n    const resp = await fetchData(endpoint);\n    return check(UserConfigurableBundles.decode(await resp.json()));\n};\n\nconst _saveBundleGroupData = async (\n    endpoint: string,\n    group: IBundleGroup,\n): Promise<IBundleGroup> => {\n    const [method, url] = group.id\n        ? [\"PATCH\", `${endpoint}${group.id}/`]\n        : [\"POST\", endpoint];\n    const data = { ...group };\n    delete data.image;\n    delete data.newImage;\n    delete data.clearImage;\n    const resp = await fetch(url, {\n        method: method,\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n            [CSRF_HEADER]: getCSRFToken(),\n        },\n        body: JSON.stringify(data),\n    });\n    return check(BundleGroup.decode(await resp.json()));\n};\n\nconst _saveBundleGroupImage = async (\n    endpoint: string,\n    group: IBundleGroup,\n): Promise<void> => {\n    if (!group.id) {\n        throw new Error(\"Can not save image for unsaved bundle group\");\n    }\n\n    if (!group.newImage && !group.clearImage) {\n        return Promise.resolve();\n    }\n\n    if (group.newImage && !group.clearImage) {\n        const formData = new FormData();\n        formData.append(`image`, group.newImage, group.newImage.name);\n        await fetch(`${endpoint}${group.id}/`, {\n            method: \"PATCH\",\n            headers: {\n                Accept: \"application/json\",\n                [CSRF_HEADER]: getCSRFToken(),\n            },\n            body: formData,\n        });\n        return;\n    }\n\n    if (group.clearImage) {\n        await fetch(`${endpoint}${group.id}/`, {\n            method: \"PATCH\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                [CSRF_HEADER]: getCSRFToken(),\n            },\n            body: JSON.stringify({\n                image: null,\n            }),\n        });\n        return;\n    }\n};\n\nexport const saveBundleGroup = async (\n    endpoint: string,\n    data: IBundleGroup,\n): Promise<IBundleGroup> => {\n    const group = await _saveBundleGroupData(endpoint, data);\n    data.id = group.id; // Update bundle group ID if it was just created\n    await _saveBundleGroupImage(endpoint, data);\n    return group;\n};\n\nexport const deleteBundleGroup = async (\n    endpoint: string,\n    group: IBundleGroup,\n): Promise<void> => {\n    if (!group.id) {\n        throw new Error(\"Can not delete unsaved bundle group\");\n    }\n    await fetch(`${endpoint}${group.id}/`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            [CSRF_HEADER]: getCSRFToken(),\n        },\n    });\n};\n","import React from \"react\";\n\nexport interface IProps {\n    searchText: string;\n    onChange: (searchText: string) => void;\n}\n\nexport interface IState {}\n\nclass BundleGroupSearchForm extends React.PureComponent<IProps, IState> {\n    render() {\n        const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n            e.preventDefault();\n            this.props.onChange(e.currentTarget.value);\n        };\n\n        const onClear = (e: React.FormEvent<HTMLButtonElement>) => {\n            e.preventDefault();\n            this.props.onChange(\"\");\n        };\n\n        const onSubmit = function (e: React.FormEvent<HTMLFormElement>) {\n            e.preventDefault();\n        };\n\n        return (\n            <div className=\"card card-body bg-light\">\n                <form className=\"form-inline\" onSubmit={onSubmit}>\n                    <span className=\"form-group\">\n                        <label htmlFor=\"id_text\">{gettext(\"Search:\")}</label>\n                        <input\n                            className=\"form-control\"\n                            id=\"id_text\"\n                            value={this.props.searchText}\n                            onChange={onChange}\n                        />\n                    </span>{\" \"}\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={onClear}\n                    >\n                        {gettext(\"Clear Search\")}\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default BundleGroupSearchForm;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n    IBundleGroup,\n    IDRFSelectOptions,\n} from \"../../../utils/models.interfaces\";\n\ninterface IProps {\n    bundleTypeChoices: IDRFSelectOptions;\n    group: IBundleGroup | null;\n    isSaving: boolean;\n    errors: {\n        bundleType?: string[];\n        isActive?: string[];\n        name?: string[];\n        headline?: string[];\n        description?: string[];\n        image?: string[];\n    };\n    bundleType: string;\n    name: string;\n    headline: string;\n    isActive: boolean;\n    description: string;\n    image: File | null;\n    clearImage: boolean;\n\n    onEdit: (\n        e: React.FormEvent<\n            HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n        >,\n    ) => void;\n    onSelectImage: (e: React.FormEvent<HTMLInputElement>) => void;\n    onClearImage: (e: React.FormEvent<HTMLInputElement>) => void;\n}\n\ninterface IState {}\n\nexport class BundleGroupMetaFields extends React.PureComponent<IProps, IState> {\n    private buildFormGroupClasses(field: keyof IProps[\"errors\"]) {\n        const fieldErrors = this.props.errors[field];\n        const classes: { [name: string]: boolean } = {\n            \"form-group\": true,\n            \"has-error\": fieldErrors ? fieldErrors.length > 0 : false,\n        };\n        return classNames(classes);\n    }\n\n    private buildErrors(field: keyof IProps[\"errors\"]) {\n        return (this.props.errors[field] || []).map((errorMsg, i) => {\n            return (\n                <span key={i} className=\"help-block\">\n                    <i className=\"fas fa-exclamation\"></i> {errorMsg}\n                </span>\n            );\n        });\n    }\n\n    private buildCurrentImage() {\n        if (!this.props.group || !this.props.group.image) {\n            return null;\n        }\n        const pathParts = this.props.group.image.split(\"/\");\n        const fileName = pathParts[pathParts.length - 1];\n        return (\n            <span>\n                {gettext(\"Currently:\")}{\" \"}\n                <a target=\"_blank\" href={this.props.group.image}>\n                    {fileName}\n                </a>{\" \"}\n                <input\n                    type=\"checkbox\"\n                    id=\"bundle-edit-form-clear-img\"\n                    checked={this.props.clearImage}\n                    onChange={this.props.onClearImage}\n                    disabled={this.props.isSaving}\n                />{\" \"}\n                <label htmlFor=\"bundle-edit-form-clear-img\">\n                    {gettext(\"Clear\")}\n                </label>\n            </span>\n        );\n    }\n\n    render() {\n        const title = this.props.group\n            ? gettext(\"Edit Bundle Group\")\n            : gettext(\"Create Bundle Group\");\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{title}</h1>\n                <div className={this.buildFormGroupClasses(\"bundleType\")}>\n                    <label htmlFor=\"id_bundleType\" className=\"control-label\">\n                        {gettext(\"Bundle Type\")}\n                    </label>\n                    <div>\n                        <select\n                            id=\"id_bundleType\"\n                            name=\"bundleType\"\n                            className=\"form-control\"\n                            value={this.props.bundleType}\n                            onChange={this.props.onEdit}\n                            disabled={this.props.isSaving}\n                        >\n                            {this.props.bundleTypeChoices.map((choice) => {\n                                return (\n                                    <option\n                                        key={choice.value}\n                                        value={choice.value}\n                                    >\n                                        {choice.display_name}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                        {this.buildErrors(\"bundleType\")}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses(\"name\")}>\n                    <label htmlFor=\"id_name\" className=\"control-label\">\n                        {gettext(\"Name\")}\n                    </label>\n                    <div>\n                        <input\n                            id=\"id_name\"\n                            name=\"name\"\n                            maxLength={200}\n                            className=\"form-control\"\n                            value={this.props.name}\n                            onChange={this.props.onEdit}\n                            disabled={this.props.isSaving}\n                        />\n                        {this.buildErrors(\"name\")}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses(\"headline\")}>\n                    <label htmlFor=\"id_headline\" className=\"control-label\">\n                        {gettext(\"Headline\")}\n                    </label>\n                    <div>\n                        <textarea\n                            id=\"id_headline\"\n                            name=\"headline\"\n                            cols={40}\n                            rows={4}\n                            className=\"form-control\"\n                            value={this.props.headline}\n                            onChange={this.props.onEdit}\n                            disabled={this.props.isSaving}\n                        ></textarea>\n                        {this.buildErrors(\"headline\")}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses(\"isActive\")}>\n                    <label htmlFor=\"id_active_status\" className=\"control-label\">\n                        {gettext(\"Active Status\")}\n                    </label>\n                    <div>\n                        <select\n                            id=\"id_isActive\"\n                            name=\"isActive\"\n                            className=\"form-control\"\n                            value={String(this.props.isActive)}\n                            onChange={this.props.onEdit}\n                            disabled={this.props.isSaving}\n                        >\n                            {[\n                                { display_name: \"Active\", value: \"true\" },\n                                { display_name: \"Inactive\", value: \"false\" },\n                            ].map((choice, index) => {\n                                return (\n                                    <option key={index} value={choice.value}>\n                                        {choice.display_name}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                        {this.buildErrors(\"isActive\")}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses(\"description\")}>\n                    <label htmlFor=\"id_description\" className=\"control-label\">\n                        {gettext(\"Description\")}\n                    </label>\n                    <div>\n                        <textarea\n                            id=\"id_description\"\n                            name=\"description\"\n                            cols={40}\n                            rows={4}\n                            className=\"form-control\"\n                            value={this.props.description}\n                            onChange={this.props.onEdit}\n                            disabled={this.props.isSaving}\n                        ></textarea>\n                        {this.buildErrors(\"description\")}\n                    </div>\n                </div>\n                <div className={this.buildFormGroupClasses(\"image\")}>\n                    <label htmlFor=\"id_image\" className=\"control-label\">\n                        {gettext(\"Image\")}\n                    </label>\n                    <div>\n                        {this.buildCurrentImage()}\n                        <input\n                            id=\"id_image\"\n                            type=\"file\"\n                            name=\"image\"\n                            className=\"form-control\"\n                            onChange={this.props.onSelectImage}\n                            disabled={this.props.isSaving}\n                        />\n                        {this.buildErrors(\"image\")}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Select from \"react-select\";\nimport { IProduct, SelectOption } from \"../../../utils/models.interfaces\";\n\ninterface IProps {\n    products: IProduct[];\n    isSaving: boolean;\n    errors: {\n        triggering_parents?: string[];\n        suggested_parents?: string[];\n    };\n    triggeringParents: number[];\n    suggestedParents: number[];\n    onSelectParent: (\n        name: \"triggeringParents\" | \"suggestedParents\",\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => void;\n}\n\ninterface IState {}\n\nexport class ParentProductsEditForm extends React.PureComponent<\n    IProps,\n    IState\n> {\n    private getParentProductSelectOptions() {\n        return this.props.products\n            .filter((p) => {\n                return !p.is_child;\n            })\n            .sort((a, b) => {\n                return a.title.localeCompare(b.title);\n            })\n            .map((p) => {\n                const opt: SelectOption = {\n                    value: p.id,\n                    label: p.title,\n                };\n                return opt;\n            });\n    }\n\n    private buildFormGroupClasses(\n        field: keyof IProps[\"errors\"],\n        extras: string[],\n    ) {\n        const fieldErrors = this.props.errors[field];\n        const classes: { [name: string]: boolean } = {\n            \"form-group\": true,\n            \"has-error\": fieldErrors ? fieldErrors.length > 0 : false,\n        };\n        extras.forEach((className) => {\n            classes[className] = true;\n        });\n        return classNames(classes);\n    }\n\n    private buildErrors(field: keyof IProps[\"errors\"]) {\n        return (this.props.errors[field] || []).map((errorMsg, i) => {\n            return (\n                <span key={i} className=\"help-block\">\n                    <i className=\"fas fa-exclamation\"></i> {errorMsg}\n                </span>\n            );\n        });\n    }\n\n    render() {\n        const parentProductSelectOptions = this.getParentProductSelectOptions();\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{gettext(\"Relevant Products\")}</h1>\n                <p>\n                    <em>\n                        {gettext(\n                            \"Select the parent and standalone products revelant to this bundle group.\",\n                        )}\n                    </em>\n                </p>\n                <div className=\"row\">\n                    <div\n                        className={this.buildFormGroupClasses(\n                            \"triggering_parents\",\n                            [\"col-sm-6\"],\n                        )}\n                    >\n                        <label htmlFor=\"id_image\" className=\"control-label\">\n                            {gettext(\"Triggers\")}\n                        </label>\n                        <div>\n                            <Select\n                                name=\"triggeringParents\"\n                                isMulti={true}\n                                value={parentProductSelectOptions.filter((o) =>\n                                    this.props.triggeringParents.includes(\n                                        o.value,\n                                    ),\n                                )}\n                                onChange={this.props.onSelectParent.bind(\n                                    this,\n                                    \"triggeringParents\",\n                                )}\n                                options={parentProductSelectOptions}\n                                isDisabled={this.props.isSaving}\n                            />\n                            {this.buildErrors(\"triggering_parents\")}\n                        </div>\n                    </div>\n                    <div\n                        className={this.buildFormGroupClasses(\n                            \"suggested_parents\",\n                            [\"col-sm-6\"],\n                        )}\n                    >\n                        <label htmlFor=\"id_image\" className=\"control-label\">\n                            {gettext(\"Suggestions\")}\n                        </label>\n                        <div>\n                            <Select\n                                name=\"suggestedProducts\"\n                                isMulti={true}\n                                value={parentProductSelectOptions.filter((o) =>\n                                    this.props.suggestedParents.includes(\n                                        o.value,\n                                    ),\n                                )}\n                                onChange={this.props.onSelectParent.bind(\n                                    this,\n                                    \"suggestedParents\",\n                                )}\n                                options={parentProductSelectOptions}\n                                isDisabled={this.props.isSaving}\n                            />\n                            {this.buildErrors(\"suggested_parents\")}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Select from \"react-select\";\nimport {\n    IProduct,\n    IRange,\n    SelectOption,\n} from \"../../../utils/models.interfaces\";\n\ntype ILinkedRange = {\n    rangeID: number | null;\n    quantity: number;\n};\nexport type ILinkedRanges = {\n    [triggeringProductID: number]: ILinkedRange[];\n};\n\ninterface IProps {\n    ranges: IRange[];\n    isSaving: boolean;\n    triggeringParents: number[];\n    linkedRanges: ILinkedRanges;\n    getProduct: (productID: number) => IProduct;\n    onLinkedRangesChange: (\n        trigger: IProduct,\n        rangeIndex: number,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => void;\n    onLinkedRangeQuantityChange: (\n        trigger: IProduct,\n        rangeIndex: number,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => void;\n}\n\ninterface IState {}\n\nconst helpText =\n    gettext(`User configurable bundles are bundles which link parent/standalone products to ranges of \\\nother products. Their intent is to represent a group of products related to the suggesting parent, rather than a \\\nspecific one-to-one mapping of product to product.`);\n\nexport class UserConfigurableBundles extends React.PureComponent<\n    IProps,\n    IState\n> {\n    private getRangeSelectOptions() {\n        const rangeOptions = this.props.ranges\n            .sort((a, b) => {\n                return a.name.localeCompare(b.name);\n            })\n            .map((p) => {\n                const opt: SelectOption = {\n                    value: p.id,\n                    label: p.name,\n                };\n                return opt;\n            });\n        return rangeOptions;\n    }\n\n    private getQuantitySelectOptions() {\n        const quantityOptions: SelectOption[] = [];\n        for (let i = 1; i < 100; i++) {\n            quantityOptions.push({\n                value: i,\n                label: `${i}`,\n            });\n        }\n        return quantityOptions;\n    }\n\n    private buildBundleRows(triggerParent: IProduct) {\n        const suggestOptions = this.getRangeSelectOptions();\n        const quantityOptions = this.getQuantitySelectOptions();\n        const linkedRanges = this.props.linkedRanges[triggerParent.id] || [];\n        if (\n            linkedRanges.length <= 0 ||\n            linkedRanges[linkedRanges.length - 1].rangeID !== null\n        ) {\n            linkedRanges.push({\n                rangeID: null,\n                quantity: 1,\n            });\n        }\n        return (\n            <table\n                key={triggerParent.id}\n                className=\"table bundle-group-edit__link-table\"\n            >\n                <tbody>\n                    {linkedRanges.map((range, i) => {\n                        return (\n                            <tr key={i}>\n                                <th>\n                                    <a\n                                        href={triggerParent.dashboard_url}\n                                        target=\"_blank\"\n                                    >\n                                        {triggerParent.title}\n                                    </a>\n                                </th>\n                                <td>\n                                    <Select\n                                        isClearable={true}\n                                        value={suggestOptions.filter(\n                                            (o) => o.value === range.rangeID,\n                                        )}\n                                        options={suggestOptions}\n                                        onChange={this.props.onLinkedRangesChange.bind(\n                                            this,\n                                            triggerParent,\n                                            i,\n                                        )}\n                                        isDisabled={this.props.isSaving}\n                                    />\n                                </td>\n                                <td>\n                                    <Select\n                                        value={quantityOptions.filter(\n                                            (o) =>\n                                                range.rangeID !== null &&\n                                                o.value === range.quantity,\n                                        )}\n                                        options={quantityOptions}\n                                        onChange={this.props.onLinkedRangeQuantityChange.bind(\n                                            this,\n                                            triggerParent,\n                                            i,\n                                        )}\n                                        isDisabled={\n                                            this.props.isSaving ||\n                                            range.rangeID === null\n                                        }\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        );\n    }\n\n    private buildParentRows() {\n        if (this.props.triggeringParents.length <= 0) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <p>\n                            <em>\n                                {gettext(\n                                    \"Select at least one trigger product to begin linking ranges.\",\n                                )}\n                            </em>\n                        </p>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <h3>\n                        <strong>{gettext(\"Trigger Parent\")}</strong>\n                    </h3>\n                </div>\n                <div className=\"col-sm-4\">\n                    <h3>\n                        <strong>{gettext(\"Suggested Range\")}</strong>\n                    </h3>\n                </div>\n                <div className=\"col-sm-4\">\n                    <h3>\n                        <strong>{gettext(\"Suggested Quantity\")}</strong>\n                    </h3>\n                </div>\n                <div className=\"col-sm-12\">\n                    {this.props.triggeringParents.map((triggerParentID) => {\n                        const triggerParent =\n                            this.props.getProduct(triggerParentID);\n                        return this.buildBundleRows(triggerParent);\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{gettext(\"Range Links (User Configurable Bundles)\")}</h1>\n                <p>\n                    <em>{helpText}</em>\n                </p>\n                {this.buildParentRows()}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { IProduct, SelectOption } from \"../../../utils/models.interfaces\";\n\nexport type ILinkedProducts = {\n    [triggeringProductID: number]: number[];\n};\n\ninterface IProps {\n    products: IProduct[];\n    isSaving: boolean;\n    triggeringParents: number[];\n    suggestedParents: number[];\n    linkedProducts: ILinkedProducts;\n    getProduct: (productID: number) => IProduct;\n    onLinkedProductsChange: (\n        trigger: IProduct,\n        suggestParent: IProduct,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => void;\n}\n\ninterface IState {}\n\nexport class ConcreteBundles extends React.PureComponent<IProps, IState> {\n    private getChildProductSelectOptions(parent: IProduct) {\n        return this.props.products\n            .filter((p) => {\n                return (\n                    !p.is_parent &&\n                    (p.id === parent.id || p.parent === parent.id)\n                );\n            })\n            .sort((a, b) => {\n                return a.title.localeCompare(b.title);\n            })\n            .map((p) => {\n                const opt: SelectOption = {\n                    value: p.id,\n                    label: p.title,\n                };\n                return opt;\n            });\n    }\n\n    private buildBundleRows(triggerParent: IProduct, suggestParent: IProduct) {\n        const triggerOptions = this.props.products\n            .filter((p) => {\n                return (\n                    !p.is_parent &&\n                    (p.id === triggerParent.id || p.parent === triggerParent.id)\n                );\n            })\n            .sort((a, b) => {\n                return a.title.localeCompare(b.title);\n            });\n        const suggestOptions = this.getChildProductSelectOptions(suggestParent);\n        return (\n            <table className=\"table bundle-group-edit__link-table\">\n                <tbody>\n                    {triggerOptions.map((trigger) => {\n                        const selectValue = (\n                            this.props.linkedProducts[trigger.id] || []\n                        ).filter((sid) => {\n                            const suggestion = this.props.getProduct(sid);\n                            return (\n                                suggestion.id === suggestParent.id ||\n                                suggestion.parent === suggestParent.id\n                            );\n                        });\n                        return (\n                            <tr key={trigger.id}>\n                                <th>\n                                    <a\n                                        href={trigger.dashboard_url}\n                                        target=\"_blank\"\n                                    >\n                                        {trigger.title}\n                                    </a>\n                                </th>\n                                <td>\n                                    <Select\n                                        isMulti={true}\n                                        value={suggestOptions.filter((o) =>\n                                            selectValue.includes(o.value),\n                                        )}\n                                        options={suggestOptions}\n                                        onChange={this.props.onLinkedProductsChange.bind(\n                                            this,\n                                            trigger,\n                                            suggestParent,\n                                        )}\n                                        isDisabled={this.props.isSaving}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        );\n    }\n\n    private buildParentRows() {\n        type ICombination = {\n            triggerParent: IProduct;\n            suggestParent: IProduct;\n        };\n        if (\n            this.props.triggeringParents.length <= 0 ||\n            this.props.suggestedParents.length <= 0\n        ) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <p>\n                            <em>\n                                {gettext(\n                                    \"Select at least one trigger product and one suggested product to begin linking variants.\",\n                                )}\n                            </em>\n                        </p>\n                    </div>\n                </div>\n            );\n        }\n        const parentCombinations: { [key: string]: ICombination } = {};\n        const buildKey = function (\n            triggerParent: number,\n            suggestParent: number,\n        ) {\n            return `${triggerParent}-${suggestParent}`;\n        };\n        this.props.triggeringParents.forEach((triggerID) => {\n            this.props.suggestedParents.forEach((suggestionID) => {\n                const key = buildKey(triggerID, suggestionID);\n                parentCombinations[key] = {\n                    triggerParent: this.props.getProduct(triggerID),\n                    suggestParent: this.props.getProduct(suggestionID),\n                };\n            });\n        });\n        return Object.values(parentCombinations).map((combination, i) => {\n            return (\n                <div key={i} className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <h3>\n                            <strong>{combination.triggerParent.title}</strong>{\" \"}\n                            <em>{gettext(\"(Trigger Parent)\")}</em>\n                        </h3>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <h3>\n                            <strong>{combination.suggestParent.title}</strong>{\" \"}\n                            <em>{gettext(\"(Suggestion Parent)\")}</em>\n                        </h3>\n                    </div>\n                    <div className=\"col-sm-12\">\n                        {this.buildBundleRows(\n                            combination.triggerParent,\n                            combination.suggestParent,\n                        )}\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <h1>{gettext(\"Product Links (Concrete Bundles)\")}</h1>\n                <p>\n                    <em>\n                        {gettext(\n                            \"Concrete bundles are bundles which link products to other specific products. They can not be customized by the end-consumer.\",\n                        )}\n                    </em>\n                </p>\n                {this.buildParentRows()}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\ninterface IProps {\n    onCancel: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\ninterface IState {}\n\nexport class BundleGroupEditFormActions extends React.PureComponent<\n    IProps,\n    IState\n> {\n    render() {\n        return (\n            <div className=\"col-sm-12 bundle-group-edit__section\">\n                <div className=\"form-group\">\n                    <a\n                        className=\"btn btn-secondary\"\n                        onClick={this.props.onCancel}\n                    >\n                        {gettext(\"Cancel\")}\n                    </a>{\" \"}\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                        {gettext(\"Save\")}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport {\n    IBundleGroup,\n    IConcreteBundle,\n    IUserConfigurableBundle,\n    IProduct,\n    IRange,\n    IDRFSelectOptions,\n    SelectOption,\n} from \"../../utils/models.interfaces\";\nimport { BundleGroupMetaFields } from \"./elements/BundleGroupEditForm_MetaFields\";\nimport { ParentProductsEditForm } from \"./elements/BundleGroupEditForm_ParentProducts\";\nimport {\n    ILinkedRanges,\n    UserConfigurableBundles,\n} from \"./elements/BundleGroupEditForm_UserConfigurableBundles\";\nimport {\n    ILinkedProducts,\n    ConcreteBundles,\n} from \"./elements/BundleGroupEditForm_ConcreteBundles\";\nimport { BundleGroupEditFormActions } from \"./elements/BundleGroupEditForm_Actions\";\n\nimport \"./BundleGroupEditForm.scss\";\n\ninterface IProps {\n    bundleTypeChoices: IDRFSelectOptions;\n    group: IBundleGroup | null;\n    products: IProduct[];\n    ranges: IRange[];\n    isSaving: boolean;\n    errors: {\n        bundleType?: string[];\n        name?: string[];\n        headline?: string[];\n        description?: string[];\n        image?: string[];\n        triggering_parents?: string[];\n        suggested_parents?: string[];\n    };\n    onCancel: () => void;\n    onSave: (data: IBundleGroup) => void;\n}\n\ninterface IState {\n    bundleType: string;\n    name: string;\n    headline: string;\n    description: string;\n    isActive: boolean | undefined | null;\n    image: File | null;\n    clearImage: boolean;\n    triggeringParents: number[];\n    suggestedParents: number[];\n    linkedRanges: ILinkedRanges;\n    linkedProducts: ILinkedProducts;\n}\n\nconst _isSelectOptionArray = (\n    opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n): opts is ReadonlyArray<SelectOption> => {\n    return !!opts && (opts as ReadonlyArray<SelectOption>).length !== undefined;\n};\n\nconst _isSelectOption = (\n    opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n): opts is SelectOption => {\n    return !!opts && !_isSelectOptionArray(opts);\n};\n\nclass BundleGroupEditForm extends React.PureComponent<IProps, IState> {\n    private productIdx: { [id: number]: IProduct };\n\n    constructor(props: IProps) {\n        super(props);\n\n        // Build linked ranges data set\n        const linkedRanges: IState[\"linkedRanges\"] = {};\n        const configurableBundles = props.group\n            ? props.group.user_configurable_bundles\n            : [];\n        configurableBundles.forEach((bundle) => {\n            if (!linkedRanges[bundle.triggering_product]) {\n                linkedRanges[bundle.triggering_product] = [];\n            }\n            linkedRanges[bundle.triggering_product].push({\n                rangeID: bundle.suggested_range,\n                quantity: bundle.quantity,\n            });\n        });\n\n        // Build linked products data set\n        const linkedProducts: IState[\"linkedProducts\"] = {};\n        const concreteBundles = props.group ? props.group.concrete_bundles : [];\n        concreteBundles.forEach((bundle) => {\n            if (!linkedProducts[bundle.triggering_product]) {\n                linkedProducts[bundle.triggering_product] = [];\n            }\n            linkedProducts[bundle.triggering_product] = linkedProducts[\n                bundle.triggering_product\n            ]\n                .concat(bundle.suggested_products)\n                .filter((id, i, ids) => {\n                    return ids.indexOf(id) === i;\n                });\n        });\n\n        // Build initial state\n        const state: IState = {\n            bundleType: \"\",\n            name: \"\",\n            description: \"\",\n            headline: \"\",\n            isActive: true,\n            image: null,\n            clearImage: false,\n            triggeringParents: [],\n            suggestedParents: [],\n            linkedRanges: linkedRanges,\n            linkedProducts: linkedProducts,\n        };\n        if (props.group) {\n            state.bundleType = props.group.bundle_type;\n            state.name = props.group.name;\n            state.description = props.group.description;\n            state.headline = props.group.headline;\n            state.isActive = props.group.is_active;\n            state.triggeringParents = props.group.triggering_parents;\n            state.suggestedParents = props.group.suggested_parents;\n        } else if (props.bundleTypeChoices.length > 0) {\n            state.bundleType = props.bundleTypeChoices[0].value;\n        }\n        this.state = state;\n        this.productIdx = {};\n        this.fillProductIdx(props.products);\n    }\n\n    private readonly onEdit = (\n        e: React.FormEvent<\n            HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n        >,\n    ) => {\n        const name = e.currentTarget.name as keyof IState;\n        const value = e.currentTarget.value;\n        this.setState((state) => {\n            return { ...state, [name]: value };\n        });\n    };\n\n    private readonly onSelectImage = (e: React.FormEvent<HTMLInputElement>) => {\n        if (!e.currentTarget.files) {\n            return;\n        }\n        const file = e.currentTarget.files[0];\n        this.setState({\n            image: file,\n        });\n    };\n\n    private readonly onSelectParent = (\n        name: \"triggeringParents\" | \"suggestedParents\",\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => {\n        let options: ReadonlyArray<SelectOption>;\n        if (!opts) {\n            options = [];\n        } else if ((opts as ReadonlyArray<SelectOption>).length === undefined) {\n            options = [opts as SelectOption];\n        } else {\n            options = opts as ReadonlyArray<SelectOption>;\n        }\n        this.setState((state) => {\n            return {\n                ...state,\n                [name]: options.map((o) => {\n                    return o.value;\n                }),\n            };\n        });\n    };\n\n    private readonly onLinkedRangesChange = (\n        trigger: IProduct,\n        rangeIndex: number,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => {\n        let option: SelectOption | null = null;\n        if (_isSelectOption(opts)) {\n            option = opts;\n        } else if (_isSelectOptionArray(opts)) {\n            throw new Error(\n                \"Can not link multiple ranges to a single trigger parent\",\n            );\n        }\n        this.setState((state) => {\n            const linkedRanges = {\n                ...state.linkedRanges,\n            };\n            if (option) {\n                if (!linkedRanges[trigger.id]) {\n                    linkedRanges[trigger.id] = [];\n                }\n                linkedRanges[trigger.id][rangeIndex] = {\n                    ...(linkedRanges[trigger.id][rangeIndex] || {}),\n                    rangeID: option.value,\n                    quantity: 1,\n                };\n            } else {\n                delete linkedRanges[trigger.id][rangeIndex];\n                linkedRanges[trigger.id] = linkedRanges[trigger.id].filter(\n                    (r) => !!r,\n                );\n                if (linkedRanges[trigger.id].length <= 0) {\n                    delete linkedRanges[trigger.id];\n                }\n            }\n            return { ...state, linkedRanges: linkedRanges };\n        });\n    };\n\n    private readonly onLinkedRangesQuantityChange = (\n        trigger: IProduct,\n        rangeIndex: number,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => {\n        let option: SelectOption = { value: 1, label: \"1\" };\n        if (_isSelectOption(opts)) {\n            option = opts;\n        } else if (_isSelectOptionArray(opts)) {\n            throw new Error(\n                \"Can not link multiple quantities to a single range parent\",\n            );\n        }\n        this.setState((state) => {\n            const linkedRanges = {\n                ...state.linkedRanges,\n            };\n            if (\n                linkedRanges[trigger.id] &&\n                linkedRanges[trigger.id][rangeIndex]\n            ) {\n                linkedRanges[trigger.id][rangeIndex] = {\n                    ...linkedRanges[trigger.id][rangeIndex],\n                    quantity: option.value,\n                };\n            }\n            return { ...state, linkedRanges: linkedRanges };\n        });\n    };\n\n    private readonly onLinkedProductsChange = (\n        trigger: IProduct,\n        suggestParent: IProduct,\n        opts: SelectOption | ReadonlyArray<SelectOption> | null | undefined,\n    ) => {\n        let options: ReadonlyArray<SelectOption>;\n        if (!opts) {\n            options = [];\n        } else if (_isSelectOption(opts)) {\n            options = [opts];\n        } else {\n            options = opts;\n        }\n        const ids = options.map((o) => {\n            return o.value;\n        });\n        this.setState((state) => {\n            const oldIDs = (state.linkedProducts[trigger.id] || []).filter(\n                (sid) => {\n                    const suggestion = this.getProduct(sid);\n                    return (\n                        suggestion.id !== suggestParent.id &&\n                        suggestion.parent !== suggestParent.id\n                    );\n                },\n            );\n            const newIDs = oldIDs.concat(ids).filter((id, i, _ids) => {\n                return _ids.indexOf(id) === i;\n            });\n            const linkedProducts = {\n                ...state.linkedProducts,\n                [trigger.id]: newIDs,\n            };\n            return { ...state, linkedProducts: linkedProducts };\n        });\n    };\n\n    private readonly onCancel = (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        this.props.onCancel();\n    };\n\n    private readonly onSave = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        const data: IBundleGroup = {\n            id: this.props.group ? this.props.group.id : null,\n            bundle_type: this.state.bundleType,\n            name: this.state.name,\n            description: this.state.description,\n            headline: this.state.headline,\n            is_active: this.state.isActive,\n            image: this.props.group ? this.props.group.image : \"\",\n            newImage: this.state.clearImage ? null : this.state.image,\n            clearImage: this.state.clearImage,\n            triggering_parents: this.state.triggeringParents,\n            suggested_parents: this.state.suggestedParents,\n            concrete_bundles: [],\n            user_configurable_bundles: [],\n        };\n\n        Object.keys(this.state.linkedRanges).forEach((tID) => {\n            const triggerID = parseInt(tID, 10);\n            const tProduct = this.getProduct(triggerID);\n            if (\n                data.triggering_parents.indexOf(tProduct.id) === -1 &&\n                (!tProduct.parent ||\n                    data.triggering_parents.indexOf(tProduct.parent) === -1)\n            ) {\n                return;\n            }\n            const linkedRanges = this.state.linkedRanges[triggerID];\n            linkedRanges.forEach(({ rangeID, quantity }) => {\n                if (!rangeID || !quantity) {\n                    return;\n                }\n                let preExistingBundle: IUserConfigurableBundle | undefined =\n                    undefined;\n                if (this.props.group) {\n                    preExistingBundle =\n                        this.props.group.user_configurable_bundles.find((b) => {\n                            return (\n                                b.triggering_product === triggerID &&\n                                b.suggested_range === rangeID\n                            );\n                        });\n                }\n                data.user_configurable_bundles.push({\n                    id: preExistingBundle ? preExistingBundle.id : null,\n                    triggering_product: triggerID,\n                    suggested_range: rangeID,\n                    quantity: quantity,\n                });\n            });\n        });\n\n        Object.keys(this.state.linkedProducts).forEach((tID) => {\n            const triggerID = parseInt(tID, 10);\n            const tProduct = this.getProduct(triggerID);\n            if (\n                data.triggering_parents.indexOf(tProduct.id) === -1 &&\n                (!tProduct.parent ||\n                    data.triggering_parents.indexOf(tProduct.parent) === -1)\n            ) {\n                return;\n            }\n\n            let preExistingBundle: IConcreteBundle | undefined = undefined;\n            if (this.props.group) {\n                preExistingBundle = this.props.group.concrete_bundles.find(\n                    (b) => {\n                        return b.triggering_product === triggerID;\n                    },\n                );\n            }\n\n            const suggestionIDs = this.state.linkedProducts[triggerID].filter(\n                (sID) => {\n                    const sProduct = this.getProduct(sID);\n                    return (\n                        data.suggested_parents.indexOf(sProduct.id) !== -1 ||\n                        (sProduct.parent &&\n                            data.suggested_parents.indexOf(sProduct.parent) !==\n                                -1)\n                    );\n                },\n            );\n\n            if (suggestionIDs.length <= 0) {\n                return;\n            }\n\n            data.concrete_bundles.push({\n                id: preExistingBundle ? preExistingBundle.id : null,\n                triggering_product: triggerID,\n                suggested_products: suggestionIDs,\n            });\n        });\n\n        this.props.onSave(data);\n    };\n\n    private readonly onClearImage = (e: React.FormEvent<HTMLInputElement>) => {\n        this.setState({\n            clearImage: e.currentTarget.checked,\n        });\n    };\n\n    private readonly getProduct = (productID: number) => {\n        return this.productIdx[productID];\n    };\n\n    componentWillReceiveProps(nextProps: IProps) {\n        this.fillProductIdx(nextProps.products);\n    }\n\n    private fillProductIdx(products: IProduct[]) {\n        this.productIdx = {};\n        products.forEach((p) => {\n            this.productIdx[p.id] = p;\n        });\n    }\n\n    render() {\n        return (\n            <form className=\"row bundle-group-edit\" onSubmit={this.onSave}>\n                <BundleGroupMetaFields\n                    bundleTypeChoices={this.props.bundleTypeChoices}\n                    group={this.props.group}\n                    isSaving={this.props.isSaving}\n                    errors={this.props.errors}\n                    bundleType={this.state.bundleType}\n                    name={this.state.name}\n                    headline={this.state.headline}\n                    description={this.state.description}\n                    isActive={this.state.isActive || false}\n                    image={this.state.image}\n                    clearImage={this.state.clearImage}\n                    onEdit={this.onEdit}\n                    onSelectImage={this.onSelectImage}\n                    onClearImage={this.onClearImage}\n                />\n                <ParentProductsEditForm\n                    products={this.props.products}\n                    isSaving={this.props.isSaving}\n                    errors={this.props.errors}\n                    triggeringParents={this.state.triggeringParents}\n                    suggestedParents={this.state.suggestedParents}\n                    onSelectParent={this.onSelectParent}\n                />\n                <UserConfigurableBundles\n                    ranges={this.props.ranges}\n                    isSaving={this.props.isSaving}\n                    triggeringParents={this.state.triggeringParents}\n                    linkedRanges={this.state.linkedRanges}\n                    getProduct={this.getProduct}\n                    onLinkedRangesChange={this.onLinkedRangesChange}\n                    onLinkedRangeQuantityChange={\n                        this.onLinkedRangesQuantityChange\n                    }\n                />\n                <ConcreteBundles\n                    products={this.props.products}\n                    isSaving={this.props.isSaving}\n                    triggeringParents={this.state.triggeringParents}\n                    suggestedParents={this.state.suggestedParents}\n                    linkedProducts={this.state.linkedProducts}\n                    getProduct={this.getProduct}\n                    onLinkedProductsChange={this.onLinkedProductsChange}\n                />\n                <BundleGroupEditFormActions onCancel={this.onCancel} />\n            </form>\n        );\n    }\n}\n\nexport default BundleGroupEditForm;\n","import React from \"react\";\nimport {\n    IBundleGroup,\n    IProduct,\n    IRange,\n    IDRFSelectOptions,\n} from \"../../utils/models.interfaces\";\n\nexport interface IProps {\n    bundleTypeChoices: IDRFSelectOptions;\n    group: IBundleGroup;\n    products: IProduct[];\n    ranges: IRange[];\n    onEdit: (group: IBundleGroup) => void;\n    onDelete: (group: IBundleGroup) => void;\n}\n\nexport interface IState {}\n\nclass BundleGroupTableRow extends React.PureComponent<IProps, IState> {\n    private buildGroupActions() {\n        const onEdit = (e: React.MouseEvent<HTMLAnchorElement>) => {\n            e.preventDefault();\n            this.props.onEdit(this.props.group);\n        };\n        const onDelete = (e: React.MouseEvent<HTMLAnchorElement>) => {\n            e.preventDefault();\n            const msgFormat = gettext(\n                \"Are you sure you want to delete this bundle group (%(name)s) and all its associated bundles?\",\n            );\n            const data = {\n                name: this.props.group.name,\n            };\n            const msg = interpolate(msgFormat, data, true);\n            if (confirm(msg)) {\n                this.props.onDelete(this.props.group);\n            }\n        };\n        return (\n            <div className=\"btn-toolbar\">\n                <div className=\"dropdown\">\n                    <button\n                        className=\"btn btn-secondary dropdown-toggle\"\n                        type=\"button\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                    >\n                        {gettext(\"Actions\")} <span className=\"caret\"></span>\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-right\">\n                        <a className=\"dropdown-item\" onClick={onEdit}>\n                            {gettext(\"Edit\")}\n                        </a>\n                        <a className=\"dropdown-item\" onClick={onDelete}>\n                            {gettext(\"Delete\")}\n                        </a>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n    private buildProductList(productIDs: number[]) {\n        const products = this.props.products.filter((p) => {\n            return productIDs.indexOf(p.id) !== -1;\n        });\n        return (\n            <ul>\n                {products.map((p) => {\n                    return (\n                        <li key={p.id}>\n                            <a href={p.dashboard_url}>{p.title}</a>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n\n    private buildRangeList() {\n        const rangeIDs = this.props.group.user_configurable_bundles.map(\n            (bundle) => bundle.suggested_range,\n        );\n        const ranges = this.props.ranges.filter((r) => {\n            return rangeIDs.includes(r.id);\n        });\n        return (\n            <ul>\n                {ranges.map((r) => {\n                    return (\n                        <li key={r.id}>\n                            <a href={r.dashboard_url}>{r.name}</a>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n\n    render() {\n        const bundleType = this.props.bundleTypeChoices.find((choice) => {\n            return choice.value === this.props.group.bundle_type;\n        });\n        let suggestedProducts: JSX.Element | null = null;\n        let suggestedRanges: JSX.Element | null = null;\n        if (this.props.group.suggested_parents) {\n            suggestedProducts = (\n                <>\n                    <em>{gettext(\"Products:\")}</em>\n                    {this.buildProductList(this.props.group.suggested_parents)}\n                </>\n            );\n        }\n        if (this.props.group.user_configurable_bundles.length > 0) {\n            suggestedRanges = (\n                <>\n                    <em>{gettext(\"Ranges:\")}</em>\n                    {this.buildRangeList()}\n                </>\n            );\n        }\n        return (\n            <tr key={`${this.props.group.id}`}>\n                <td>{this.props.group.name}</td>\n                <td>{bundleType ? bundleType.display_name : \"\"}</td>\n                <td>\n                    <img\n                        src={this.props.group.image || undefined}\n                        width={100}\n                    />\n                </td>\n                <td>\n                    {this.buildProductList(this.props.group.triggering_parents)}\n                </td>\n                <td>\n                    {suggestedProducts}\n                    {suggestedRanges}\n                </td>\n                <td>\n                    {this.props.group.is_active\n                        ? gettext(\"Active\")\n                        : gettext(\"Inactive\")}\n                </td>\n                <td>{this.buildGroupActions()}</td>\n            </tr>\n        );\n    }\n}\n\nexport default BundleGroupTableRow;\n","import React from \"react\";\nimport lunr from \"lunr\";\nimport Modal from \"react-modal\";\nimport {\n    getBundleTypeChoices,\n    listBundleGroups,\n    listProducts,\n    listRanges,\n    saveBundleGroup,\n    deleteBundleGroup,\n} from \"../utils/api\";\nimport {\n    IBundleGroup,\n    IProduct,\n    IRange,\n    IDRFSelectOptions,\n} from \"../utils/models.interfaces\";\nimport BundleGroupSearchForm from \"./molecules/BundleGroupSearchForm\";\nimport BundleGroupEditForm from \"./molecules/BundleGroupEditForm\";\nimport BundleGroupTableRow from \"./molecules/BundleGroupTableRow\";\n\nimport \"./BundleGroupTable.scss\";\n\nModal.setAppElement(\"#bundlegroup-table\");\n\nconst modalStyles = {\n    overlay: {\n        backgroundColor: \"rgba(51, 51, 51, 0.8)\",\n        zIndex: 2000,\n    },\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        minWidth: \"800px\",\n        maxWidth: \"1000px\",\n        maxHeight: \"90%\",\n    },\n};\n\nexport interface IProps {\n    bundleGroupURL: string;\n    concreteBundleURL: string;\n    concreteBundleProductChoiceURL: string;\n    userConfigurableBundleURL: string;\n    userConfigurableBundleRangeChoiceURL: string;\n}\n\nexport interface IState {\n    bundleTypeChoices: IDRFSelectOptions;\n    groups: IBundleGroup[];\n    products: IProduct[];\n    ranges: IRange[];\n    searchText: string;\n    selectedGroup: number | null;\n    editModalOpen: boolean;\n    isSaving: boolean;\n    isLoading: boolean;\n    formErrors: {\n        name?: string[];\n        description?: string[];\n        image?: string[];\n        triggering_parents?: string[];\n        suggested_parents?: string[];\n    };\n}\n\nclass BundleGroupTable extends React.Component<IProps, IState> {\n    idx: lunr.Index | undefined;\n\n    state: IState = {\n        bundleTypeChoices: [],\n        groups: [],\n        products: [],\n        ranges: [],\n        searchText: \"\",\n        selectedGroup: null,\n        editModalOpen: false,\n        isSaving: false,\n        isLoading: true,\n        formErrors: {},\n    };\n\n    private readonly onSearchTextChange = (text: string) => {\n        this.setState({\n            searchText: text,\n        });\n    };\n\n    private readonly onCreate = (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        this.openCreateModal();\n    };\n\n    private readonly onOpenEditModal = (group: IBundleGroup) => {\n        this.setState({\n            selectedGroup: group.id,\n            formErrors: {},\n            editModalOpen: true,\n        });\n    };\n\n    private readonly onCloseModal = () => {\n        this.setState({\n            selectedGroup: null,\n            formErrors: {},\n            editModalOpen: false,\n        });\n    };\n\n    private readonly onSaveBundleGroup = async (data: IBundleGroup) => {\n        this.setState({ isSaving: true });\n        try {\n            await saveBundleGroup(this.props.bundleGroupURL, data);\n            await this.loadData();\n            this.setState({ isSaving: false });\n            this.onCloseModal();\n        } catch (err) {\n            this.setState({\n                isSaving: false,\n                /* eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment */\n                formErrors: (err as any).response.body,\n            });\n        }\n    };\n\n    private readonly onDeleteBundleGroup = async (data: IBundleGroup) => {\n        await deleteBundleGroup(this.props.bundleGroupURL, data);\n        return this.loadData();\n    };\n\n    componentDidMount() {\n        this.loadData().catch((err) => {\n            console.error(err);\n        });\n    }\n\n    private async loadData() {\n        this.setState({ isLoading: true });\n        const loading = Promise.all([\n            getBundleTypeChoices(this.props.bundleGroupURL),\n            listBundleGroups(this.props.bundleGroupURL),\n            listProducts(this.props.concreteBundleProductChoiceURL),\n            listRanges(this.props.userConfigurableBundleRangeChoiceURL),\n        ]);\n        const [choices, groups, products, ranges] = await loading;\n        this.setBundleTypeChoices(choices);\n        this.setGroups(groups);\n        this.setProducts(products);\n        this.setRanges(ranges);\n        this.setState({ isLoading: false });\n    }\n\n    private openCreateModal() {\n        this.setState({\n            selectedGroup: null,\n            formErrors: {},\n            editModalOpen: true,\n        });\n    }\n\n    private setGroups(groups: IBundleGroup[]) {\n        // Update the search index\n        this.idx = lunr(function () {\n            this.ref(\"id\");\n            this.field(\"name\");\n            this.field(\"description\");\n            groups.forEach((g) => {\n                this.add(g);\n            });\n        });\n        // Update the component state\n        this.setState({\n            groups: groups,\n        });\n    }\n\n    private setBundleTypeChoices(choices: IDRFSelectOptions) {\n        this.setState({\n            bundleTypeChoices: choices,\n        });\n    }\n\n    private setProducts(products: IProduct[]) {\n        this.setState({\n            products: products,\n        });\n    }\n\n    private setRanges(ranges: IRange[]) {\n        this.setState({\n            ranges: ranges,\n        });\n    }\n\n    private getSearchResults(searchText: string) {\n        if (!this.idx) {\n            return [];\n        }\n        const results = this.idx.search(searchText);\n        return results\n            .map((result) => {\n                const gid = parseInt(result.ref, 10);\n                return this.state.groups.find((g) => {\n                    return g.id === gid;\n                });\n            })\n            .filter((group): group is IBundleGroup => {\n                return !!group;\n            });\n    }\n\n    private buildGroupRows() {\n        const searchText = this.state.searchText.trim();\n        const results = searchText\n            ? this.getSearchResults(searchText)\n            : this.state.groups;\n        const numTableColumns = 6;\n        if (this.state.isLoading) {\n            return (\n                <tr>\n                    <td colSpan={numTableColumns}>\n                        <em>{gettext(\"Loading…\")}</em>\n                    </td>\n                </tr>\n            );\n        }\n        if (results.length <= 0) {\n            const msg = searchText\n                ? interpolate(\n                      gettext(\n                          \"No bundle groups found for search: %(searchText)s\",\n                      ),\n                      { searchText: searchText },\n                      true,\n                  )\n                : gettext(\"No bundle groups found.\");\n            return (\n                <tr>\n                    <td colSpan={numTableColumns}>{msg}</td>\n                </tr>\n            );\n        }\n        return results.map((group) => {\n            return (\n                <BundleGroupTableRow\n                    key={`${group.id}`}\n                    bundleTypeChoices={this.state.bundleTypeChoices}\n                    group={group}\n                    products={this.state.products}\n                    ranges={this.state.ranges}\n                    onEdit={this.onOpenEditModal}\n                    onDelete={(bg) => {\n                        this.onDeleteBundleGroup(bg).catch((err) => {\n                            console.error(err);\n                        });\n                    }}\n                />\n            );\n        });\n    }\n\n    private buildEditModal() {\n        const group = this.state.groups.find((g) => {\n            return g.id === this.state.selectedGroup;\n        });\n        return (\n            <Modal\n                contentLabel={gettext(\"Edit Bundle Group\")}\n                style={modalStyles}\n                isOpen={this.state.editModalOpen}\n            >\n                <BundleGroupEditForm\n                    bundleTypeChoices={this.state.bundleTypeChoices}\n                    group={group || null}\n                    products={this.state.products}\n                    ranges={this.state.ranges}\n                    isSaving={this.state.isSaving}\n                    errors={this.state.formErrors}\n                    onCancel={this.onCloseModal}\n                    onSave={(bg) => {\n                        this.onSaveBundleGroup(bg).catch((err) => {\n                            console.error(err);\n                        });\n                    }}\n                />\n            </Modal>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <a\n                        className=\"btn btn-primary float-right\"\n                        onClick={this.onCreate}\n                    >\n                        <i className=\"fas fa-plus-circle\"></i>{\" \"}\n                        {gettext(\"Create new bundle group\")}\n                    </a>\n                    <h1>{gettext(\"Bundle Groups\")}</h1>\n                </div>\n                <div className=\"table-header\">\n                    <h3>\n                        <i className=\"fas fa-search\"></i>\n                        {gettext(\"Search Bundle Groups\")}\n                    </h3>\n                </div>\n                <BundleGroupSearchForm\n                    searchText={this.state.searchText}\n                    onChange={this.onSearchTextChange}\n                />\n\n                <table className=\"table table-striped table-bordered\">\n                    <tbody>\n                        <tr>\n                            <th>{gettext(\"Name\")}</th>\n                            <th>{gettext(\"Type\")}</th>\n                            <th>{gettext(\"Image\")}</th>\n                            <th>{gettext(\"Triggers\")}</th>\n                            <th>{gettext(\"Suggestions\")}</th>\n                            <th>{gettext(\"Active Status\")}</th>\n                            <th>{gettext(\"Actions\")}</th>\n                        </tr>\n                        {this.buildGroupRows()}\n                    </tbody>\n                </table>\n\n                {this.buildEditModal()}\n            </div>\n        );\n    }\n}\n\nexport default BundleGroupTable;\n","// Load polyfills needed for IE11 and other old browsers\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport BundleGroupTable from \"./bundles/BundleGroupTable\";\n\ntype INamedInterpolationData = { [key: string]: string };\ntype IPositionalInterpolationData = string[];\ntype IInterpolateFn = ((\n    fmt: string,\n    obj: IPositionalInterpolationData,\n    named?: false,\n) => string) &\n    ((fmt: string, obj: INamedInterpolationData, named: true) => string);\ninterface IDjango {\n    readonly gettext: (msgid: string) => string;\n    readonly ngettext: (\n        singular: string,\n        plural: string,\n        count: number,\n    ) => string;\n    readonly gettext_noop: (msgid: string) => string;\n    readonly pgettext: (context: string, msgid: string) => string;\n    readonly npgettext: (\n        context: string,\n        singular: string,\n        plural: string,\n        count: number,\n    ) => string;\n    readonly interpolate: IInterpolateFn;\n\n    readonly pluralidx: (count: number) => number;\n\n    readonly jsi18n_initialized: boolean;\n    readonly catalog: {\n        [msgid: string]: string;\n    };\n    readonly formats: {\n        [msgid: string]: string | string[];\n    };\n    readonly get_format: (formatType: string) => string | string[];\n}\n\ndeclare global {\n    // Django i18n functions\n    const django: IDjango;\n    const pluralidx: IDjango[\"pluralidx\"];\n    const gettext: IDjango[\"gettext\"];\n    const ngettext: IDjango[\"ngettext\"];\n    const gettext_noop: IDjango[\"gettext_noop\"];\n    const pgettext: IDjango[\"pgettext\"];\n    const npgettext: IDjango[\"npgettext\"];\n    const interpolate: IDjango[\"interpolate\"];\n    const get_format: IDjango[\"get_format\"];\n}\n\nconst main = function () {\n    const elem = document.querySelector(\"#bundlegroup-table\") as HTMLDivElement;\n    const bundleGroupURL = elem.dataset.bundlegroupApi || \"\";\n    const concreteBundleURL = elem.dataset.concretebundleApi || \"\";\n    const concreteBundleProductChoiceURL =\n        elem.dataset.concretebundleProductChoiceApi || \"\";\n    const userConfigurableBundleURL =\n        elem.dataset.userconfigurablebundleApi || \"\";\n    const userConfigurableBundleRangeChoiceURL =\n        elem.dataset.userconfigurablebundleRangeChoiceApi || \"\";\n    const component = (\n        <BundleGroupTable\n            bundleGroupURL={bundleGroupURL}\n            concreteBundleURL={concreteBundleURL}\n            concreteBundleProductChoiceURL={concreteBundleProductChoiceURL}\n            userConfigurableBundleURL={userConfigurableBundleURL}\n            userConfigurableBundleRangeChoiceURL={\n                userConfigurableBundleRangeChoiceURL\n            }\n        />\n    );\n    render(component, elem);\n};\n\nmain();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t582: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdjango_oscar_bundles\"] = self[\"webpackChunkdjango_oscar_bundles\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [121], function() { return __webpack_require__(376); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","check","result","isLeft","Error","failure","left","join","right","nullable","type","t","optional","FileType","constructor","super","f","File","u","c","this","is","_tag","file","DRFSelectOption","value","display_name","DRFSelectOptions","BaseField","fieldType","required","read_only","label","help_text","IntegerField","BooleanField","DatetimeField","StringField","max_length","ChoiceField","choices","Field","DRFOptionsResponse","name","description","renders","parses","actions","GET","HEAD","OPTIONS","POST","PUT","PATCH","DELETE","Product","id","dashboard_url","product_class","title","slug","is_parent","is_child","parent","children","Products","Range","Ranges","ConcreteBundle","triggering_product","suggested_products","UserConfigurableBundle","suggested_range","quantity","BundleGroup","bundle_type","is_active","headline","image","newImage","clearImage","triggering_parents","suggested_parents","concrete_bundles","user_configurable_bundles","BundleGroups","CSRF_HEADER","getCSRFToken","cookies","get","fetchData","endpoint","__awaiter","fetch","method","headers","Accept","listBundleGroups","resp","decode","json","listProducts","listRanges","BundleGroupSearchForm","React","render","className","onSubmit","e","preventDefault","htmlFor","gettext","props","searchText","onChange","currentTarget","onClick","BundleGroupMetaFields","buildFormGroupClasses","field","fieldErrors","errors","classes","length","classNames","buildErrors","map","errorMsg","i","key","buildCurrentImage","group","pathParts","split","fileName","target","href","checked","onClearImage","disabled","isSaving","bundleType","onEdit","bundleTypeChoices","choice","maxLength","cols","rows","String","isActive","index","onSelectImage","ParentProductsEditForm","getParentProductSelectOptions","products","filter","p","sort","a","b","localeCompare","extras","forEach","parentProductSelectOptions","Select","isMulti","o","triggeringParents","includes","onSelectParent","bind","options","isDisabled","suggestedParents","helpText","UserConfigurableBundles","getRangeSelectOptions","ranges","getQuantitySelectOptions","quantityOptions","push","buildBundleRows","triggerParent","suggestOptions","linkedRanges","rangeID","range","isClearable","onLinkedRangesChange","onLinkedRangeQuantityChange","buildParentRows","triggerParentID","getProduct","ConcreteBundles","getChildProductSelectOptions","suggestParent","triggerOptions","trigger","selectValue","linkedProducts","sid","suggestion","onLinkedProductsChange","parentCombinations","triggerID","suggestionID","Object","values","combination","BundleGroupEditFormActions","onCancel","_isSelectOptionArray","opts","undefined","_isSelectOption","BundleGroupEditForm","setState","state","assign","files","rangeIndex","option","r","onLinkedRangesQuantityChange","ids","newIDs","concat","_ids","indexOf","onSave","data","keys","tID","parseInt","tProduct","_ref","preExistingBundle","find","suggestionIDs","sID","sProduct","productID","productIdx","bundle","fillProductIdx","componentWillReceiveProps","nextProps","BundleGroupTableRow","buildGroupActions","msgFormat","msg","interpolate","confirm","onDelete","buildProductList","productIDs","buildRangeList","rangeIDs","suggestedProducts","suggestedRanges","src","width","Modal","modalStyles","overlay","backgroundColor","zIndex","content","top","bottom","marginRight","transform","minWidth","maxWidth","maxHeight","BundleGroupTable","groups","selectedGroup","editModalOpen","isLoading","formErrors","onSearchTextChange","text","onCreate","openCreateModal","onOpenEditModal","onCloseModal","onSaveBundleGroup","saveBundleGroup","_saveBundleGroupData","url","body","JSON","stringify","_saveBundleGroupImage","Promise","resolve","formData","FormData","append","bundleGroupURL","loadData","err","response","onDeleteBundleGroup","deleteBundleGroup","componentDidMount","catch","console","error","loading","all","concreteBundleProductChoiceURL","userConfigurableBundleRangeChoiceURL","setBundleTypeChoices","setGroups","setProducts","setRanges","idx","lunr","ref","g","add","getSearchResults","search","gid","buildGroupRows","trim","results","colSpan","bg","buildEditModal","contentLabel","style","isOpen","elem","document","querySelector","dataset","bundlegroupApi","concreteBundleURL","concretebundleApi","concretebundleProductChoiceApi","userConfigurableBundleURL","userconfigurablebundleApi","userconfigurablebundleRangeChoiceApi","component","main","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","getPrototypeOf","obj","__proto__","mode","then","ns","create","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}
